// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ustatus.proto

#include "ustatus.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace uprotocol {
namespace v1 {
PROTOBUF_CONSTEXPR UStatus::UStatus(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.details_)*/{}
  , /*decltype(_impl_.message_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.code_)*/0} {}
struct UStatusDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UStatusDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~UStatusDefaultTypeInternal() {}
  union {
    UStatus _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UStatusDefaultTypeInternal _UStatus_default_instance_;
}  // namespace v1
}  // namespace uprotocol
static ::_pb::Metadata file_level_metadata_ustatus_2eproto[1];
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_ustatus_2eproto[1];
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_ustatus_2eproto = nullptr;

const uint32_t TableStruct_ustatus_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::uprotocol::v1::UStatus, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::uprotocol::v1::UStatus, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::uprotocol::v1::UStatus, _impl_.code_),
  PROTOBUF_FIELD_OFFSET(::uprotocol::v1::UStatus, _impl_.message_),
  PROTOBUF_FIELD_OFFSET(::uprotocol::v1::UStatus, _impl_.details_),
  ~0u,
  0,
  ~0u,
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 9, -1, sizeof(::uprotocol::v1::UStatus)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::uprotocol::v1::_UStatus_default_instance_._instance,
};

const char descriptor_table_protodef_ustatus_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\rustatus.proto\022\014uprotocol.v1\032\031google/pr"
  "otobuf/any.proto\"u\n\007UStatus\022!\n\004code\030\001 \001("
  "\0162\023.uprotocol.v1.UCode\022\024\n\007message\030\002 \001(\tH"
  "\000\210\001\001\022%\n\007details\030\003 \003(\0132\024.google.protobuf."
  "AnyB\n\n\010_message*\270\002\n\005UCode\022\006\n\002OK\020\000\022\r\n\tCAN"
  "CELLED\020\001\022\013\n\007UNKNOWN\020\002\022\024\n\020INVALID_ARGUMEN"
  "T\020\003\022\025\n\021DEADLINE_EXCEEDED\020\004\022\r\n\tNOT_FOUND\020"
  "\005\022\022\n\016ALREADY_EXISTS\020\006\022\025\n\021PERMISSION_DENI"
  "ED\020\007\022\023\n\017UNAUTHENTICATED\020\020\022\026\n\022RESOURCE_EX"
  "HAUSTED\020\010\022\027\n\023FAILED_PRECONDITION\020\t\022\013\n\007AB"
  "ORTED\020\n\022\020\n\014OUT_OF_RANGE\020\013\022\021\n\rUNIMPLEMENT"
  "ED\020\014\022\014\n\010INTERNAL\020\r\022\017\n\013UNAVAILABLE\020\016\022\r\n\tD"
  "ATA_LOSS\020\017B*\n\030org.eclipse.uprotocol.v1B\014"
  "UStatusProtoP\001b\006proto3"
  ;
static const ::_pbi::DescriptorTable* const descriptor_table_ustatus_2eproto_deps[1] = {
  &::descriptor_table_google_2fprotobuf_2fany_2eproto,
};
static ::_pbi::once_flag descriptor_table_ustatus_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_ustatus_2eproto = {
    false, false, 542, descriptor_table_protodef_ustatus_2eproto,
    "ustatus.proto",
    &descriptor_table_ustatus_2eproto_once, descriptor_table_ustatus_2eproto_deps, 1, 1,
    schemas, file_default_instances, TableStruct_ustatus_2eproto::offsets,
    file_level_metadata_ustatus_2eproto, file_level_enum_descriptors_ustatus_2eproto,
    file_level_service_descriptors_ustatus_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_ustatus_2eproto_getter() {
  return &descriptor_table_ustatus_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_ustatus_2eproto(&descriptor_table_ustatus_2eproto);
namespace uprotocol {
namespace v1 {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* UCode_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_ustatus_2eproto);
  return file_level_enum_descriptors_ustatus_2eproto[0];
}
bool UCode_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
      return true;
    default:
      return false;
  }
}


// ===================================================================

class UStatus::_Internal {
 public:
  using HasBits = decltype(std::declval<UStatus>()._impl_._has_bits_);
  static void set_has_message(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

void UStatus::clear_details() {
  _impl_.details_.Clear();
}
UStatus::UStatus(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:uprotocol.v1.UStatus)
}
UStatus::UStatus(const UStatus& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  UStatus* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.details_){from._impl_.details_}
    , decltype(_impl_.message_){}
    , decltype(_impl_.code_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.message_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.message_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_message()) {
    _this->_impl_.message_.Set(from._internal_message(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.code_ = from._impl_.code_;
  // @@protoc_insertion_point(copy_constructor:uprotocol.v1.UStatus)
}

inline void UStatus::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.details_){arena}
    , decltype(_impl_.message_){}
    , decltype(_impl_.code_){0}
  };
  _impl_.message_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.message_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

UStatus::~UStatus() {
  // @@protoc_insertion_point(destructor:uprotocol.v1.UStatus)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void UStatus::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.details_.~RepeatedPtrField();
  _impl_.message_.Destroy();
}

void UStatus::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void UStatus::Clear() {
// @@protoc_insertion_point(message_clear_start:uprotocol.v1.UStatus)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.details_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.message_.ClearNonDefaultToEmpty();
  }
  _impl_.code_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UStatus::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .uprotocol.v1.UCode code = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_code(static_cast<::uprotocol::v1::UCode>(val));
        } else
          goto handle_unusual;
        continue;
      // optional string message = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_message();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "uprotocol.v1.UStatus.message"));
        } else
          goto handle_unusual;
        continue;
      // repeated .google.protobuf.Any details = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_details(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* UStatus::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:uprotocol.v1.UStatus)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .uprotocol.v1.UCode code = 1;
  if (this->_internal_code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_code(), target);
  }

  // optional string message = 2;
  if (_internal_has_message()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_message().data(), static_cast<int>(this->_internal_message().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "uprotocol.v1.UStatus.message");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_message(), target);
  }

  // repeated .google.protobuf.Any details = 3;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_details_size()); i < n; i++) {
    const auto& repfield = this->_internal_details(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(3, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:uprotocol.v1.UStatus)
  return target;
}

size_t UStatus::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:uprotocol.v1.UStatus)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .google.protobuf.Any details = 3;
  total_size += 1UL * this->_internal_details_size();
  for (const auto& msg : this->_impl_.details_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // optional string message = 2;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_message());
  }

  // .uprotocol.v1.UCode code = 1;
  if (this->_internal_code() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_code());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UStatus::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    UStatus::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UStatus::GetClassData() const { return &_class_data_; }


void UStatus::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<UStatus*>(&to_msg);
  auto& from = static_cast<const UStatus&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:uprotocol.v1.UStatus)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.details_.MergeFrom(from._impl_.details_);
  if (from._internal_has_message()) {
    _this->_internal_set_message(from._internal_message());
  }
  if (from._internal_code() != 0) {
    _this->_internal_set_code(from._internal_code());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UStatus::CopyFrom(const UStatus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:uprotocol.v1.UStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UStatus::IsInitialized() const {
  return true;
}

void UStatus::InternalSwap(UStatus* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.details_.InternalSwap(&other->_impl_.details_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.message_, lhs_arena,
      &other->_impl_.message_, rhs_arena
  );
  swap(_impl_.code_, other->_impl_.code_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UStatus::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ustatus_2eproto_getter, &descriptor_table_ustatus_2eproto_once,
      file_level_metadata_ustatus_2eproto[0]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace uprotocol
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::uprotocol::v1::UStatus*
Arena::CreateMaybeMessage< ::uprotocol::v1::UStatus >(Arena* arena) {
  return Arena::CreateMessageInternal< ::uprotocol::v1::UStatus >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
