// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: core/udiscovery/v3/udiscovery.proto

#include "core/udiscovery/v3/udiscovery.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace uprotocol {
namespace core {
namespace udiscovery {
namespace v3 {
PROTOBUF_CONSTEXPR PropertyValue::PropertyValue(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.attr_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_._oneof_case_)*/{}} {}
struct PropertyValueDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PropertyValueDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~PropertyValueDefaultTypeInternal() {}
  union {
    PropertyValue _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PropertyValueDefaultTypeInternal _PropertyValue_default_instance_;
PROTOBUF_CONSTEXPR Node_PropertiesEntry_DoNotUse::Node_PropertiesEntry_DoNotUse(
    ::_pbi::ConstantInitialized) {}
struct Node_PropertiesEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Node_PropertiesEntry_DoNotUseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~Node_PropertiesEntry_DoNotUseDefaultTypeInternal() {}
  union {
    Node_PropertiesEntry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Node_PropertiesEntry_DoNotUseDefaultTypeInternal _Node_PropertiesEntry_DoNotUse_default_instance_;
PROTOBUF_CONSTEXPR Node::Node(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.nodes_)*/{}
  , /*decltype(_impl_.properties_)*/{::_pbi::ConstantInitialized()}
  , /*decltype(_impl_.uri_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.type_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct NodeDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NodeDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~NodeDefaultTypeInternal() {}
  union {
    Node _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NodeDefaultTypeInternal _Node_default_instance_;
PROTOBUF_CONSTEXPR UpdateNodeRequest::UpdateNodeRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.node_)*/nullptr
  , /*decltype(_impl_.ttl_)*/0} {}
struct UpdateNodeRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UpdateNodeRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~UpdateNodeRequestDefaultTypeInternal() {}
  union {
    UpdateNodeRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UpdateNodeRequestDefaultTypeInternal _UpdateNodeRequest_default_instance_;
PROTOBUF_CONSTEXPR DeleteNodesRequest::DeleteNodesRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.uris_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct DeleteNodesRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeleteNodesRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeleteNodesRequestDefaultTypeInternal() {}
  union {
    DeleteNodesRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeleteNodesRequestDefaultTypeInternal _DeleteNodesRequest_default_instance_;
PROTOBUF_CONSTEXPR FindNodesRequest::FindNodesRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.uri_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.depth_)*/0} {}
struct FindNodesRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FindNodesRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~FindNodesRequestDefaultTypeInternal() {}
  union {
    FindNodesRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FindNodesRequestDefaultTypeInternal _FindNodesRequest_default_instance_;
PROTOBUF_CONSTEXPR FindNodesResponse::FindNodesResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.nodes_)*/{}
  , /*decltype(_impl_.status_)*/nullptr
  , /*decltype(_impl_.ttl_)*/0} {}
struct FindNodesResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FindNodesResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~FindNodesResponseDefaultTypeInternal() {}
  union {
    FindNodesResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FindNodesResponseDefaultTypeInternal _FindNodesResponse_default_instance_;
PROTOBUF_CONSTEXPR FindNodePropertiesRequest::FindNodePropertiesRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.properties_)*/{}
  , /*decltype(_impl_.uri_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct FindNodePropertiesRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FindNodePropertiesRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~FindNodePropertiesRequestDefaultTypeInternal() {}
  union {
    FindNodePropertiesRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FindNodePropertiesRequestDefaultTypeInternal _FindNodePropertiesRequest_default_instance_;
PROTOBUF_CONSTEXPR FindNodePropertiesResponse_PropertiesEntry_DoNotUse::FindNodePropertiesResponse_PropertiesEntry_DoNotUse(
    ::_pbi::ConstantInitialized) {}
struct FindNodePropertiesResponse_PropertiesEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FindNodePropertiesResponse_PropertiesEntry_DoNotUseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~FindNodePropertiesResponse_PropertiesEntry_DoNotUseDefaultTypeInternal() {}
  union {
    FindNodePropertiesResponse_PropertiesEntry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FindNodePropertiesResponse_PropertiesEntry_DoNotUseDefaultTypeInternal _FindNodePropertiesResponse_PropertiesEntry_DoNotUse_default_instance_;
PROTOBUF_CONSTEXPR FindNodePropertiesResponse::FindNodePropertiesResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.properties_)*/{::_pbi::ConstantInitialized()}
  , /*decltype(_impl_.status_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct FindNodePropertiesResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FindNodePropertiesResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~FindNodePropertiesResponseDefaultTypeInternal() {}
  union {
    FindNodePropertiesResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FindNodePropertiesResponseDefaultTypeInternal _FindNodePropertiesResponse_default_instance_;
PROTOBUF_CONSTEXPR AddNodesRequest::AddNodesRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.nodes_)*/{}
  , /*decltype(_impl_.parent_uri_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct AddNodesRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AddNodesRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~AddNodesRequestDefaultTypeInternal() {}
  union {
    AddNodesRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AddNodesRequestDefaultTypeInternal _AddNodesRequest_default_instance_;
PROTOBUF_CONSTEXPR UpdatePropertyRequest::UpdatePropertyRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.uri_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.property_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.value_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct UpdatePropertyRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UpdatePropertyRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~UpdatePropertyRequestDefaultTypeInternal() {}
  union {
    UpdatePropertyRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UpdatePropertyRequestDefaultTypeInternal _UpdatePropertyRequest_default_instance_;
PROTOBUF_CONSTEXPR Notification::Notification(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.uri_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.parent_uri_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.operation_)*/0
  , /*decltype(_impl_.ttl_)*/0} {}
struct NotificationDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NotificationDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~NotificationDefaultTypeInternal() {}
  union {
    Notification _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NotificationDefaultTypeInternal _Notification_default_instance_;
PROTOBUF_CONSTEXPR ObserverInfo::ObserverInfo(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.uri_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ObserverInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ObserverInfoDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ObserverInfoDefaultTypeInternal() {}
  union {
    ObserverInfo _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ObserverInfoDefaultTypeInternal _ObserverInfo_default_instance_;
PROTOBUF_CONSTEXPR NotificationsRequest::NotificationsRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.uris_)*/{}
  , /*decltype(_impl_.observer_)*/nullptr
  , /*decltype(_impl_.depth_)*/0} {}
struct NotificationsRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NotificationsRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~NotificationsRequestDefaultTypeInternal() {}
  union {
    NotificationsRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NotificationsRequestDefaultTypeInternal _NotificationsRequest_default_instance_;
PROTOBUF_CONSTEXPR ResolveUriRequest::ResolveUriRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.uri_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ResolveUriRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ResolveUriRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ResolveUriRequestDefaultTypeInternal() {}
  union {
    ResolveUriRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ResolveUriRequestDefaultTypeInternal _ResolveUriRequest_default_instance_;
PROTOBUF_CONSTEXPR ResolveUriResponse::ResolveUriResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.uri_)*/nullptr
  , /*decltype(_impl_.status_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ResolveUriResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ResolveUriResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ResolveUriResponseDefaultTypeInternal() {}
  union {
    ResolveUriResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ResolveUriResponseDefaultTypeInternal _ResolveUriResponse_default_instance_;
PROTOBUF_CONSTEXPR LookupUriResponse::LookupUriResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.uris_)*/nullptr
  , /*decltype(_impl_.status_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct LookupUriResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LookupUriResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~LookupUriResponseDefaultTypeInternal() {}
  union {
    LookupUriResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LookupUriResponseDefaultTypeInternal _LookupUriResponse_default_instance_;
PROTOBUF_CONSTEXPR NodeNotificationTopic::NodeNotificationTopic(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.resource_name_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct NodeNotificationTopicDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NodeNotificationTopicDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~NodeNotificationTopicDefaultTypeInternal() {}
  union {
    NodeNotificationTopic _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NodeNotificationTopicDefaultTypeInternal _NodeNotificationTopic_default_instance_;
}  // namespace v3
}  // namespace udiscovery
}  // namespace core
}  // namespace uprotocol
static ::_pb::Metadata file_level_metadata_core_2fudiscovery_2fv3_2fudiscovery_2eproto[19];
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_core_2fudiscovery_2fv3_2fudiscovery_2eproto[3];
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_core_2fudiscovery_2fv3_2fudiscovery_2eproto = nullptr;

const uint32_t TableStruct_core_2fudiscovery_2fv3_2fudiscovery_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::uprotocol::core::udiscovery::v3::PropertyValue, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::uprotocol::core::udiscovery::v3::PropertyValue, _impl_._oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  PROTOBUF_FIELD_OFFSET(::uprotocol::core::udiscovery::v3::PropertyValue, _impl_.attr_),
  PROTOBUF_FIELD_OFFSET(::uprotocol::core::udiscovery::v3::Node_PropertiesEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::uprotocol::core::udiscovery::v3::Node_PropertiesEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::uprotocol::core::udiscovery::v3::Node_PropertiesEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::uprotocol::core::udiscovery::v3::Node_PropertiesEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::uprotocol::core::udiscovery::v3::Node, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::uprotocol::core::udiscovery::v3::Node, _impl_.uri_),
  PROTOBUF_FIELD_OFFSET(::uprotocol::core::udiscovery::v3::Node, _impl_.nodes_),
  PROTOBUF_FIELD_OFFSET(::uprotocol::core::udiscovery::v3::Node, _impl_.properties_),
  PROTOBUF_FIELD_OFFSET(::uprotocol::core::udiscovery::v3::Node, _impl_.type_),
  PROTOBUF_FIELD_OFFSET(::uprotocol::core::udiscovery::v3::UpdateNodeRequest, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::uprotocol::core::udiscovery::v3::UpdateNodeRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::uprotocol::core::udiscovery::v3::UpdateNodeRequest, _impl_.node_),
  PROTOBUF_FIELD_OFFSET(::uprotocol::core::udiscovery::v3::UpdateNodeRequest, _impl_.ttl_),
  ~0u,
  0,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::uprotocol::core::udiscovery::v3::DeleteNodesRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::uprotocol::core::udiscovery::v3::DeleteNodesRequest, _impl_.uris_),
  PROTOBUF_FIELD_OFFSET(::uprotocol::core::udiscovery::v3::FindNodesRequest, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::uprotocol::core::udiscovery::v3::FindNodesRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::uprotocol::core::udiscovery::v3::FindNodesRequest, _impl_.uri_),
  PROTOBUF_FIELD_OFFSET(::uprotocol::core::udiscovery::v3::FindNodesRequest, _impl_.depth_),
  ~0u,
  0,
  PROTOBUF_FIELD_OFFSET(::uprotocol::core::udiscovery::v3::FindNodesResponse, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::uprotocol::core::udiscovery::v3::FindNodesResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::uprotocol::core::udiscovery::v3::FindNodesResponse, _impl_.nodes_),
  PROTOBUF_FIELD_OFFSET(::uprotocol::core::udiscovery::v3::FindNodesResponse, _impl_.status_),
  PROTOBUF_FIELD_OFFSET(::uprotocol::core::udiscovery::v3::FindNodesResponse, _impl_.ttl_),
  ~0u,
  ~0u,
  0,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::uprotocol::core::udiscovery::v3::FindNodePropertiesRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::uprotocol::core::udiscovery::v3::FindNodePropertiesRequest, _impl_.uri_),
  PROTOBUF_FIELD_OFFSET(::uprotocol::core::udiscovery::v3::FindNodePropertiesRequest, _impl_.properties_),
  PROTOBUF_FIELD_OFFSET(::uprotocol::core::udiscovery::v3::FindNodePropertiesResponse_PropertiesEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::uprotocol::core::udiscovery::v3::FindNodePropertiesResponse_PropertiesEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::uprotocol::core::udiscovery::v3::FindNodePropertiesResponse_PropertiesEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::uprotocol::core::udiscovery::v3::FindNodePropertiesResponse_PropertiesEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::uprotocol::core::udiscovery::v3::FindNodePropertiesResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::uprotocol::core::udiscovery::v3::FindNodePropertiesResponse, _impl_.properties_),
  PROTOBUF_FIELD_OFFSET(::uprotocol::core::udiscovery::v3::FindNodePropertiesResponse, _impl_.status_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::uprotocol::core::udiscovery::v3::AddNodesRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::uprotocol::core::udiscovery::v3::AddNodesRequest, _impl_.parent_uri_),
  PROTOBUF_FIELD_OFFSET(::uprotocol::core::udiscovery::v3::AddNodesRequest, _impl_.nodes_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::uprotocol::core::udiscovery::v3::UpdatePropertyRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::uprotocol::core::udiscovery::v3::UpdatePropertyRequest, _impl_.uri_),
  PROTOBUF_FIELD_OFFSET(::uprotocol::core::udiscovery::v3::UpdatePropertyRequest, _impl_.property_),
  PROTOBUF_FIELD_OFFSET(::uprotocol::core::udiscovery::v3::UpdatePropertyRequest, _impl_.value_),
  PROTOBUF_FIELD_OFFSET(::uprotocol::core::udiscovery::v3::Notification, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::uprotocol::core::udiscovery::v3::Notification, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::uprotocol::core::udiscovery::v3::Notification, _impl_.uri_),
  PROTOBUF_FIELD_OFFSET(::uprotocol::core::udiscovery::v3::Notification, _impl_.parent_uri_),
  PROTOBUF_FIELD_OFFSET(::uprotocol::core::udiscovery::v3::Notification, _impl_.operation_),
  PROTOBUF_FIELD_OFFSET(::uprotocol::core::udiscovery::v3::Notification, _impl_.ttl_),
  ~0u,
  0,
  ~0u,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::uprotocol::core::udiscovery::v3::ObserverInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::uprotocol::core::udiscovery::v3::ObserverInfo, _impl_.uri_),
  PROTOBUF_FIELD_OFFSET(::uprotocol::core::udiscovery::v3::NotificationsRequest, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::uprotocol::core::udiscovery::v3::NotificationsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::uprotocol::core::udiscovery::v3::NotificationsRequest, _impl_.uris_),
  PROTOBUF_FIELD_OFFSET(::uprotocol::core::udiscovery::v3::NotificationsRequest, _impl_.observer_),
  PROTOBUF_FIELD_OFFSET(::uprotocol::core::udiscovery::v3::NotificationsRequest, _impl_.depth_),
  ~0u,
  ~0u,
  0,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::uprotocol::core::udiscovery::v3::ResolveUriRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::uprotocol::core::udiscovery::v3::ResolveUriRequest, _impl_.uri_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::uprotocol::core::udiscovery::v3::ResolveUriResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::uprotocol::core::udiscovery::v3::ResolveUriResponse, _impl_.uri_),
  PROTOBUF_FIELD_OFFSET(::uprotocol::core::udiscovery::v3::ResolveUriResponse, _impl_.status_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::uprotocol::core::udiscovery::v3::LookupUriResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::uprotocol::core::udiscovery::v3::LookupUriResponse, _impl_.uris_),
  PROTOBUF_FIELD_OFFSET(::uprotocol::core::udiscovery::v3::LookupUriResponse, _impl_.status_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::uprotocol::core::udiscovery::v3::NodeNotificationTopic, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::uprotocol::core::udiscovery::v3::NodeNotificationTopic, _impl_.resource_name_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::uprotocol::core::udiscovery::v3::PropertyValue)},
  { 15, 23, -1, sizeof(::uprotocol::core::udiscovery::v3::Node_PropertiesEntry_DoNotUse)},
  { 25, -1, -1, sizeof(::uprotocol::core::udiscovery::v3::Node)},
  { 35, 43, -1, sizeof(::uprotocol::core::udiscovery::v3::UpdateNodeRequest)},
  { 45, -1, -1, sizeof(::uprotocol::core::udiscovery::v3::DeleteNodesRequest)},
  { 52, 60, -1, sizeof(::uprotocol::core::udiscovery::v3::FindNodesRequest)},
  { 62, 71, -1, sizeof(::uprotocol::core::udiscovery::v3::FindNodesResponse)},
  { 74, -1, -1, sizeof(::uprotocol::core::udiscovery::v3::FindNodePropertiesRequest)},
  { 82, 90, -1, sizeof(::uprotocol::core::udiscovery::v3::FindNodePropertiesResponse_PropertiesEntry_DoNotUse)},
  { 92, -1, -1, sizeof(::uprotocol::core::udiscovery::v3::FindNodePropertiesResponse)},
  { 100, -1, -1, sizeof(::uprotocol::core::udiscovery::v3::AddNodesRequest)},
  { 108, -1, -1, sizeof(::uprotocol::core::udiscovery::v3::UpdatePropertyRequest)},
  { 117, 127, -1, sizeof(::uprotocol::core::udiscovery::v3::Notification)},
  { 131, -1, -1, sizeof(::uprotocol::core::udiscovery::v3::ObserverInfo)},
  { 138, 147, -1, sizeof(::uprotocol::core::udiscovery::v3::NotificationsRequest)},
  { 150, -1, -1, sizeof(::uprotocol::core::udiscovery::v3::ResolveUriRequest)},
  { 157, -1, -1, sizeof(::uprotocol::core::udiscovery::v3::ResolveUriResponse)},
  { 165, -1, -1, sizeof(::uprotocol::core::udiscovery::v3::LookupUriResponse)},
  { 173, -1, -1, sizeof(::uprotocol::core::udiscovery::v3::NodeNotificationTopic)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::uprotocol::core::udiscovery::v3::_PropertyValue_default_instance_._instance,
  &::uprotocol::core::udiscovery::v3::_Node_PropertiesEntry_DoNotUse_default_instance_._instance,
  &::uprotocol::core::udiscovery::v3::_Node_default_instance_._instance,
  &::uprotocol::core::udiscovery::v3::_UpdateNodeRequest_default_instance_._instance,
  &::uprotocol::core::udiscovery::v3::_DeleteNodesRequest_default_instance_._instance,
  &::uprotocol::core::udiscovery::v3::_FindNodesRequest_default_instance_._instance,
  &::uprotocol::core::udiscovery::v3::_FindNodesResponse_default_instance_._instance,
  &::uprotocol::core::udiscovery::v3::_FindNodePropertiesRequest_default_instance_._instance,
  &::uprotocol::core::udiscovery::v3::_FindNodePropertiesResponse_PropertiesEntry_DoNotUse_default_instance_._instance,
  &::uprotocol::core::udiscovery::v3::_FindNodePropertiesResponse_default_instance_._instance,
  &::uprotocol::core::udiscovery::v3::_AddNodesRequest_default_instance_._instance,
  &::uprotocol::core::udiscovery::v3::_UpdatePropertyRequest_default_instance_._instance,
  &::uprotocol::core::udiscovery::v3::_Notification_default_instance_._instance,
  &::uprotocol::core::udiscovery::v3::_ObserverInfo_default_instance_._instance,
  &::uprotocol::core::udiscovery::v3::_NotificationsRequest_default_instance_._instance,
  &::uprotocol::core::udiscovery::v3::_ResolveUriRequest_default_instance_._instance,
  &::uprotocol::core::udiscovery::v3::_ResolveUriResponse_default_instance_._instance,
  &::uprotocol::core::udiscovery::v3::_LookupUriResponse_default_instance_._instance,
  &::uprotocol::core::udiscovery::v3::_NodeNotificationTopic_default_instance_._instance,
};

const char descriptor_table_protodef_core_2fudiscovery_2fv3_2fudiscovery_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n#core/udiscovery/v3/udiscovery.proto\022\034u"
  "protocol.core.udiscovery.v3\032\037google/prot"
  "obuf/timestamp.proto\032\027uprotocol_options."
  "proto\032\turi.proto\032\rustatus.proto\"\330\001\n\rProp"
  "ertyValue\022\023\n\tu_boolean\030\001 \001(\010H\000\022\023\n\tu_inte"
  "ger\030\002 \001(\005H\000\022\022\n\010u_string\030\003 \001(\tH\000\022\021\n\007u_byt"
  "es\030\004 \001(\014H\000\022\017\n\005u_uri\030\005 \001(\tH\000\0221\n\013u_timesta"
  "mp\030\006 \001(\0132\032.google.protobuf.TimestampH\000\022\022"
  "\n\010u_double\030\007 \001(\001H\000\022\026\n\014u_integer_64\030\010 \001(\003"
  "H\000B\006\n\004attr\"\254\003\n\004Node\022\013\n\003uri\030\001 \001(\t\0221\n\005node"
  "s\030\002 \003(\0132\".uprotocol.core.udiscovery.v3.N"
  "ode\022F\n\nproperties\030\003 \003(\01322.uprotocol.core"
  ".udiscovery.v3.Node.PropertiesEntry\0225\n\004t"
  "ype\030\004 \001(\0162\'.uprotocol.core.udiscovery.v3"
  ".Node.Type\032^\n\017PropertiesEntry\022\013\n\003key\030\001 \001"
  "(\t\022:\n\005value\030\002 \001(\0132+.uprotocol.core.udisc"
  "overy.v3.PropertyValue:\0028\001\"\204\001\n\004Type\022\017\n\013U"
  "NSPECIFIED\020\000\022\n\n\006DOMAIN\020\001\022\n\n\006DEVICE\020\002\022\n\n\006"
  "ENTITY\020\003\022\013\n\007VERSION\020\t\022\t\n\005TOPIC\020\004\022\n\n\006METH"
  "OD\020\005\022\013\n\007MESSAGE\020\006\022\014\n\010RESOURCE\020\007\022\010\n\004USER\020"
  "\010\"_\n\021UpdateNodeRequest\0220\n\004node\030\001 \001(\0132\".u"
  "protocol.core.udiscovery.v3.Node\022\020\n\003ttl\030"
  "\003 \001(\005H\000\210\001\001B\006\n\004_ttl\"\"\n\022DeleteNodesRequest"
  "\022\014\n\004uris\030\001 \003(\t\"=\n\020FindNodesRequest\022\013\n\003ur"
  "i\030\001 \001(\t\022\022\n\005depth\030\002 \001(\005H\000\210\001\001B\010\n\006_depth\"\207\001"
  "\n\021FindNodesResponse\0221\n\005nodes\030\001 \003(\0132\".upr"
  "otocol.core.udiscovery.v3.Node\022%\n\006status"
  "\030\002 \001(\0132\025.uprotocol.v1.UStatus\022\020\n\003ttl\030\003 \001"
  "(\005H\000\210\001\001B\006\n\004_ttl\"<\n\031FindNodePropertiesReq"
  "uest\022\013\n\003uri\030\001 \001(\t\022\022\n\nproperties\030\002 \003(\t\"\201\002"
  "\n\032FindNodePropertiesResponse\022\\\n\nproperti"
  "es\030\001 \003(\0132H.uprotocol.core.udiscovery.v3."
  "FindNodePropertiesResponse.PropertiesEnt"
  "ry\022%\n\006status\030\002 \001(\0132\025.uprotocol.v1.UStatu"
  "s\032^\n\017PropertiesEntry\022\013\n\003key\030\001 \001(\t\022:\n\005val"
  "ue\030\002 \001(\0132+.uprotocol.core.udiscovery.v3."
  "PropertyValue:\0028\001\"X\n\017AddNodesRequest\022\022\n\n"
  "parent_uri\030\001 \001(\t\0221\n\005nodes\030\002 \003(\0132\".uproto"
  "col.core.udiscovery.v3.Node\"r\n\025UpdatePro"
  "pertyRequest\022\013\n\003uri\030\001 \001(\t\022\020\n\010property\030\002 "
  "\001(\t\022:\n\005value\030\003 \001(\0132+.uprotocol.core.udis"
  "covery.v3.PropertyValue\"\371\001\n\014Notification"
  "\022\013\n\003uri\030\001 \001(\t\022\027\n\nparent_uri\030\002 \001(\tH\000\210\001\001\022G"
  "\n\toperation\030\003 \001(\01624.uprotocol.core.udisc"
  "overy.v3.Notification.Operation\022\020\n\003ttl\030\004"
  " \001(\005H\001\210\001\001\"9\n\tOperation\022\013\n\007INVALID\020\000\022\n\n\006U"
  "PDATE\020\001\022\007\n\003ADD\020\002\022\n\n\006REMOVE\020\003\"\026\n\tResource"
  "s\022\t\n\005nodes\020\000B\r\n\013_parent_uriB\006\n\004_ttl\"\033\n\014O"
  "bserverInfo\022\013\n\003uri\030\001 \001(\t\"\200\001\n\024Notificatio"
  "nsRequest\022\014\n\004uris\030\001 \003(\t\022<\n\010observer\030\002 \001("
  "\0132*.uprotocol.core.udiscovery.v3.Observe"
  "rInfo\022\022\n\005depth\030\003 \001(\005H\000\210\001\001B\010\n\006_depth\"4\n\021R"
  "esolveUriRequest\022\037\n\003uri\030\001 \001(\0132\022.uprotoco"
  "l.v1.UUri\"\\\n\022ResolveUriResponse\022\037\n\003uri\030\001"
  " \001(\0132\022.uprotocol.v1.UUri\022%\n\006status\030\003 \001(\013"
  "2\025.uprotocol.v1.UStatus\"a\n\021LookupUriResp"
  "onse\022%\n\004uris\030\001 \001(\0132\027.uprotocol.v1.UUriBa"
  "tch\022%\n\006status\030\002 \001(\0132\025.uprotocol.v1.UStat"
  "us\"r\n\025NodeNotificationTopic\022R\n\rresource_"
  "name\030\001 \001(\01624.uprotocol.core.udiscovery.v"
  "3.Notification.ResourcesB\005\202\316\030\001*:\005\340\307\030\350\0072\322"
  "\010\n\nuDiscovery\022V\n\tLookupUri\022\022.uprotocol.v"
  "1.UUri\032/.uprotocol.core.udiscovery.v3.Lo"
  "okupUriResponse\"\004\300\301\030\001\022Z\n\nUpdateNode\022/.up"
  "rotocol.core.udiscovery.v3.UpdateNodeReq"
  "uest\032\025.uprotocol.v1.UStatus\"\004\300\301\030\002\022r\n\tFin"
  "dNodes\022..uprotocol.core.udiscovery.v3.Fi"
  "ndNodesRequest\032/.uprotocol.core.udiscove"
  "ry.v3.FindNodesResponse\"\004\300\301\030\003\022\215\001\n\022FindNo"
  "deProperties\0227.uprotocol.core.udiscovery"
  ".v3.FindNodePropertiesRequest\0328.uprotoco"
  "l.core.udiscovery.v3.FindNodePropertiesR"
  "esponse\"\004\300\301\030\004\022\\\n\013DeleteNodes\0220.uprotocol"
  ".core.udiscovery.v3.DeleteNodesRequest\032\025"
  ".uprotocol.v1.UStatus\"\004\300\301\030\005\022V\n\010AddNodes\022"
  "-.uprotocol.core.udiscovery.v3.AddNodesR"
  "equest\032\025.uprotocol.v1.UStatus\"\004\300\301\030\006\022b\n\016U"
  "pdateProperty\0223.uprotocol.core.udiscover"
  "y.v3.UpdatePropertyRequest\032\025.uprotocol.v"
  "1.UStatus\"\004\300\301\030\007\022k\n\030RegisterForNotificati"
  "ons\0222.uprotocol.core.udiscovery.v3.Notif"
  "icationsRequest\032\025.uprotocol.v1.UStatus\"\004"
  "\300\301\030\010\022m\n\032UnregisterForNotifications\0222.upr"
  "otocol.core.udiscovery.v3.NotificationsR"
  "equest\032\025.uprotocol.v1.UStatus\"\004\300\301\030\t\022u\n\nR"
  "esolveUri\022/.uprotocol.core.udiscovery.v3"
  ".ResolveUriRequest\0320.uprotocol.core.udis"
  "covery.v3.ResolveUriResponse\"\004\300\301\030\n\032\037\242\273\030\017"
  "core.udiscovery\250\273\030\003\260\273\030\000\270\273\030\001B=\n(org.eclip"
  "se.uprotocol.core.udiscovery.v3B\017UDiscov"
  "eryProtoP\001b\006proto3"
  ;
static const ::_pbi::DescriptorTable* const descriptor_table_core_2fudiscovery_2fv3_2fudiscovery_2eproto_deps[4] = {
  &::descriptor_table_google_2fprotobuf_2ftimestamp_2eproto,
  &::descriptor_table_uprotocol_5foptions_2eproto,
  &::descriptor_table_uri_2eproto,
  &::descriptor_table_ustatus_2eproto,
};
static ::_pbi::once_flag descriptor_table_core_2fudiscovery_2fv3_2fudiscovery_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_core_2fudiscovery_2fv3_2fudiscovery_2eproto = {
    false, false, 3618, descriptor_table_protodef_core_2fudiscovery_2fv3_2fudiscovery_2eproto,
    "core/udiscovery/v3/udiscovery.proto",
    &descriptor_table_core_2fudiscovery_2fv3_2fudiscovery_2eproto_once, descriptor_table_core_2fudiscovery_2fv3_2fudiscovery_2eproto_deps, 4, 19,
    schemas, file_default_instances, TableStruct_core_2fudiscovery_2fv3_2fudiscovery_2eproto::offsets,
    file_level_metadata_core_2fudiscovery_2fv3_2fudiscovery_2eproto, file_level_enum_descriptors_core_2fudiscovery_2fv3_2fudiscovery_2eproto,
    file_level_service_descriptors_core_2fudiscovery_2fv3_2fudiscovery_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_core_2fudiscovery_2fv3_2fudiscovery_2eproto_getter() {
  return &descriptor_table_core_2fudiscovery_2fv3_2fudiscovery_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_core_2fudiscovery_2fv3_2fudiscovery_2eproto(&descriptor_table_core_2fudiscovery_2fv3_2fudiscovery_2eproto);
namespace uprotocol {
namespace core {
namespace udiscovery {
namespace v3 {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Node_Type_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_core_2fudiscovery_2fv3_2fudiscovery_2eproto);
  return file_level_enum_descriptors_core_2fudiscovery_2fv3_2fudiscovery_2eproto[0];
}
bool Node_Type_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
constexpr Node_Type Node::UNSPECIFIED;
constexpr Node_Type Node::DOMAIN;
constexpr Node_Type Node::DEVICE;
constexpr Node_Type Node::ENTITY;
constexpr Node_Type Node::VERSION;
constexpr Node_Type Node::TOPIC;
constexpr Node_Type Node::METHOD;
constexpr Node_Type Node::MESSAGE;
constexpr Node_Type Node::RESOURCE;
constexpr Node_Type Node::USER;
constexpr Node_Type Node::Type_MIN;
constexpr Node_Type Node::Type_MAX;
constexpr int Node::Type_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Notification_Operation_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_core_2fudiscovery_2fv3_2fudiscovery_2eproto);
  return file_level_enum_descriptors_core_2fudiscovery_2fv3_2fudiscovery_2eproto[1];
}
bool Notification_Operation_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
constexpr Notification_Operation Notification::INVALID;
constexpr Notification_Operation Notification::UPDATE;
constexpr Notification_Operation Notification::ADD;
constexpr Notification_Operation Notification::REMOVE;
constexpr Notification_Operation Notification::Operation_MIN;
constexpr Notification_Operation Notification::Operation_MAX;
constexpr int Notification::Operation_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Notification_Resources_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_core_2fudiscovery_2fv3_2fudiscovery_2eproto);
  return file_level_enum_descriptors_core_2fudiscovery_2fv3_2fudiscovery_2eproto[2];
}
bool Notification_Resources_IsValid(int value) {
  switch (value) {
    case 0:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
constexpr Notification_Resources Notification::nodes;
constexpr Notification_Resources Notification::Resources_MIN;
constexpr Notification_Resources Notification::Resources_MAX;
constexpr int Notification::Resources_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

// ===================================================================

class PropertyValue::_Internal {
 public:
  static const ::PROTOBUF_NAMESPACE_ID::Timestamp& u_timestamp(const PropertyValue* msg);
};

const ::PROTOBUF_NAMESPACE_ID::Timestamp&
PropertyValue::_Internal::u_timestamp(const PropertyValue* msg) {
  return *msg->_impl_.attr_.u_timestamp_;
}
void PropertyValue::set_allocated_u_timestamp(::PROTOBUF_NAMESPACE_ID::Timestamp* u_timestamp) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_attr();
  if (u_timestamp) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(u_timestamp));
    if (message_arena != submessage_arena) {
      u_timestamp = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, u_timestamp, submessage_arena);
    }
    set_has_u_timestamp();
    _impl_.attr_.u_timestamp_ = u_timestamp;
  }
  // @@protoc_insertion_point(field_set_allocated:uprotocol.core.udiscovery.v3.PropertyValue.u_timestamp)
}
void PropertyValue::clear_u_timestamp() {
  if (_internal_has_u_timestamp()) {
    if (GetArenaForAllocation() == nullptr) {
      delete _impl_.attr_.u_timestamp_;
    }
    clear_has_attr();
  }
}
PropertyValue::PropertyValue(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:uprotocol.core.udiscovery.v3.PropertyValue)
}
PropertyValue::PropertyValue(const PropertyValue& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  PropertyValue* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.attr_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , /*decltype(_impl_._oneof_case_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  clear_has_attr();
  switch (from.attr_case()) {
    case kUBoolean: {
      _this->_internal_set_u_boolean(from._internal_u_boolean());
      break;
    }
    case kUInteger: {
      _this->_internal_set_u_integer(from._internal_u_integer());
      break;
    }
    case kUString: {
      _this->_internal_set_u_string(from._internal_u_string());
      break;
    }
    case kUBytes: {
      _this->_internal_set_u_bytes(from._internal_u_bytes());
      break;
    }
    case kUUri: {
      _this->_internal_set_u_uri(from._internal_u_uri());
      break;
    }
    case kUTimestamp: {
      _this->_internal_mutable_u_timestamp()->::PROTOBUF_NAMESPACE_ID::Timestamp::MergeFrom(
          from._internal_u_timestamp());
      break;
    }
    case kUDouble: {
      _this->_internal_set_u_double(from._internal_u_double());
      break;
    }
    case kUInteger64: {
      _this->_internal_set_u_integer_64(from._internal_u_integer_64());
      break;
    }
    case ATTR_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:uprotocol.core.udiscovery.v3.PropertyValue)
}

inline void PropertyValue::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.attr_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , /*decltype(_impl_._oneof_case_)*/{}
  };
  clear_has_attr();
}

PropertyValue::~PropertyValue() {
  // @@protoc_insertion_point(destructor:uprotocol.core.udiscovery.v3.PropertyValue)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void PropertyValue::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (has_attr()) {
    clear_attr();
  }
}

void PropertyValue::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void PropertyValue::clear_attr() {
// @@protoc_insertion_point(one_of_clear_start:uprotocol.core.udiscovery.v3.PropertyValue)
  switch (attr_case()) {
    case kUBoolean: {
      // No need to clear
      break;
    }
    case kUInteger: {
      // No need to clear
      break;
    }
    case kUString: {
      _impl_.attr_.u_string_.Destroy();
      break;
    }
    case kUBytes: {
      _impl_.attr_.u_bytes_.Destroy();
      break;
    }
    case kUUri: {
      _impl_.attr_.u_uri_.Destroy();
      break;
    }
    case kUTimestamp: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.attr_.u_timestamp_;
      }
      break;
    }
    case kUDouble: {
      // No need to clear
      break;
    }
    case kUInteger64: {
      // No need to clear
      break;
    }
    case ATTR_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = ATTR_NOT_SET;
}


void PropertyValue::Clear() {
// @@protoc_insertion_point(message_clear_start:uprotocol.core.udiscovery.v3.PropertyValue)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_attr();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PropertyValue::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool u_boolean = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _internal_set_u_boolean(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 u_integer = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _internal_set_u_integer(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string u_string = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_u_string();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "uprotocol.core.udiscovery.v3.PropertyValue.u_string"));
        } else
          goto handle_unusual;
        continue;
      // bytes u_bytes = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_u_bytes();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string u_uri = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          auto str = _internal_mutable_u_uri();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "uprotocol.core.udiscovery.v3.PropertyValue.u_uri"));
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.Timestamp u_timestamp = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          ptr = ctx->ParseMessage(_internal_mutable_u_timestamp(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // double u_double = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 57)) {
          _internal_set_u_double(::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr));
          ptr += sizeof(double);
        } else
          goto handle_unusual;
        continue;
      // int64 u_integer_64 = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 64)) {
          _internal_set_u_integer_64(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PropertyValue::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:uprotocol.core.udiscovery.v3.PropertyValue)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool u_boolean = 1;
  if (_internal_has_u_boolean()) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_u_boolean(), target);
  }

  // int32 u_integer = 2;
  if (_internal_has_u_integer()) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(2, this->_internal_u_integer(), target);
  }

  // string u_string = 3;
  if (_internal_has_u_string()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_u_string().data(), static_cast<int>(this->_internal_u_string().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "uprotocol.core.udiscovery.v3.PropertyValue.u_string");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_u_string(), target);
  }

  // bytes u_bytes = 4;
  if (_internal_has_u_bytes()) {
    target = stream->WriteBytesMaybeAliased(
        4, this->_internal_u_bytes(), target);
  }

  // string u_uri = 5;
  if (_internal_has_u_uri()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_u_uri().data(), static_cast<int>(this->_internal_u_uri().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "uprotocol.core.udiscovery.v3.PropertyValue.u_uri");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_u_uri(), target);
  }

  // .google.protobuf.Timestamp u_timestamp = 6;
  if (_internal_has_u_timestamp()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(6, _Internal::u_timestamp(this),
        _Internal::u_timestamp(this).GetCachedSize(), target, stream);
  }

  // double u_double = 7;
  if (_internal_has_u_double()) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(7, this->_internal_u_double(), target);
  }

  // int64 u_integer_64 = 8;
  if (_internal_has_u_integer_64()) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(8, this->_internal_u_integer_64(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:uprotocol.core.udiscovery.v3.PropertyValue)
  return target;
}

size_t PropertyValue::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:uprotocol.core.udiscovery.v3.PropertyValue)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (attr_case()) {
    // bool u_boolean = 1;
    case kUBoolean: {
      total_size += 1 + 1;
      break;
    }
    // int32 u_integer = 2;
    case kUInteger: {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_u_integer());
      break;
    }
    // string u_string = 3;
    case kUString: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_u_string());
      break;
    }
    // bytes u_bytes = 4;
    case kUBytes: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
          this->_internal_u_bytes());
      break;
    }
    // string u_uri = 5;
    case kUUri: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_u_uri());
      break;
    }
    // .google.protobuf.Timestamp u_timestamp = 6;
    case kUTimestamp: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.attr_.u_timestamp_);
      break;
    }
    // double u_double = 7;
    case kUDouble: {
      total_size += 1 + 8;
      break;
    }
    // int64 u_integer_64 = 8;
    case kUInteger64: {
      total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_u_integer_64());
      break;
    }
    case ATTR_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PropertyValue::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    PropertyValue::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PropertyValue::GetClassData() const { return &_class_data_; }


void PropertyValue::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<PropertyValue*>(&to_msg);
  auto& from = static_cast<const PropertyValue&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:uprotocol.core.udiscovery.v3.PropertyValue)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.attr_case()) {
    case kUBoolean: {
      _this->_internal_set_u_boolean(from._internal_u_boolean());
      break;
    }
    case kUInteger: {
      _this->_internal_set_u_integer(from._internal_u_integer());
      break;
    }
    case kUString: {
      _this->_internal_set_u_string(from._internal_u_string());
      break;
    }
    case kUBytes: {
      _this->_internal_set_u_bytes(from._internal_u_bytes());
      break;
    }
    case kUUri: {
      _this->_internal_set_u_uri(from._internal_u_uri());
      break;
    }
    case kUTimestamp: {
      _this->_internal_mutable_u_timestamp()->::PROTOBUF_NAMESPACE_ID::Timestamp::MergeFrom(
          from._internal_u_timestamp());
      break;
    }
    case kUDouble: {
      _this->_internal_set_u_double(from._internal_u_double());
      break;
    }
    case kUInteger64: {
      _this->_internal_set_u_integer_64(from._internal_u_integer_64());
      break;
    }
    case ATTR_NOT_SET: {
      break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PropertyValue::CopyFrom(const PropertyValue& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:uprotocol.core.udiscovery.v3.PropertyValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PropertyValue::IsInitialized() const {
  return true;
}

void PropertyValue::InternalSwap(PropertyValue* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.attr_, other->_impl_.attr_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata PropertyValue::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_core_2fudiscovery_2fv3_2fudiscovery_2eproto_getter, &descriptor_table_core_2fudiscovery_2fv3_2fudiscovery_2eproto_once,
      file_level_metadata_core_2fudiscovery_2fv3_2fudiscovery_2eproto[0]);
}

// ===================================================================

Node_PropertiesEntry_DoNotUse::Node_PropertiesEntry_DoNotUse() {}
Node_PropertiesEntry_DoNotUse::Node_PropertiesEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void Node_PropertiesEntry_DoNotUse::MergeFrom(const Node_PropertiesEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata Node_PropertiesEntry_DoNotUse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_core_2fudiscovery_2fv3_2fudiscovery_2eproto_getter, &descriptor_table_core_2fudiscovery_2fv3_2fudiscovery_2eproto_once,
      file_level_metadata_core_2fudiscovery_2fv3_2fudiscovery_2eproto[1]);
}

// ===================================================================

class Node::_Internal {
 public:
};

Node::Node(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  if (arena != nullptr && !is_message_owned) {
    arena->OwnCustomDestructor(this, &Node::ArenaDtor);
  }
  // @@protoc_insertion_point(arena_constructor:uprotocol.core.udiscovery.v3.Node)
}
Node::Node(const Node& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  Node* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.nodes_){from._impl_.nodes_}
    , /*decltype(_impl_.properties_)*/{}
    , decltype(_impl_.uri_){}
    , decltype(_impl_.type_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.properties_.MergeFrom(from._impl_.properties_);
  _impl_.uri_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.uri_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_uri().empty()) {
    _this->_impl_.uri_.Set(from._internal_uri(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.type_ = from._impl_.type_;
  // @@protoc_insertion_point(copy_constructor:uprotocol.core.udiscovery.v3.Node)
}

inline void Node::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.nodes_){arena}
    , /*decltype(_impl_.properties_)*/{::_pbi::ArenaInitialized(), arena}
    , decltype(_impl_.uri_){}
    , decltype(_impl_.type_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.uri_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.uri_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

Node::~Node() {
  // @@protoc_insertion_point(destructor:uprotocol.core.udiscovery.v3.Node)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    ArenaDtor(this);
    return;
  }
  SharedDtor();
}

inline void Node::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.nodes_.~RepeatedPtrField();
  _impl_.properties_.Destruct();
  _impl_.properties_.~MapField();
  _impl_.uri_.Destroy();
}

void Node::ArenaDtor(void* object) {
  Node* _this = reinterpret_cast< Node* >(object);
  _this->_impl_.properties_.Destruct();
}
void Node::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void Node::Clear() {
// @@protoc_insertion_point(message_clear_start:uprotocol.core.udiscovery.v3.Node)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.nodes_.Clear();
  _impl_.properties_.Clear();
  _impl_.uri_.ClearToEmpty();
  _impl_.type_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Node::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string uri = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_uri();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "uprotocol.core.udiscovery.v3.Node.uri"));
        } else
          goto handle_unusual;
        continue;
      // repeated .uprotocol.core.udiscovery.v3.Node nodes = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_nodes(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      // map<string, .uprotocol.core.udiscovery.v3.PropertyValue> properties = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&_impl_.properties_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else
          goto handle_unusual;
        continue;
      // .uprotocol.core.udiscovery.v3.Node.Type type = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_type(static_cast<::uprotocol::core::udiscovery::v3::Node_Type>(val));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Node::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:uprotocol.core.udiscovery.v3.Node)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string uri = 1;
  if (!this->_internal_uri().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_uri().data(), static_cast<int>(this->_internal_uri().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "uprotocol.core.udiscovery.v3.Node.uri");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_uri(), target);
  }

  // repeated .uprotocol.core.udiscovery.v3.Node nodes = 2;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_nodes_size()); i < n; i++) {
    const auto& repfield = this->_internal_nodes(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  // map<string, .uprotocol.core.udiscovery.v3.PropertyValue> properties = 3;
  if (!this->_internal_properties().empty()) {
    using MapType = ::_pb::Map<std::string, ::uprotocol::core::udiscovery::v3::PropertyValue>;
    using WireHelper = Node_PropertiesEntry_DoNotUse::Funcs;
    const auto& map_field = this->_internal_properties();
    auto check_utf8 = [](const MapType::value_type& entry) {
      (void)entry;
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        entry.first.data(), static_cast<int>(entry.first.length()),
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
        "uprotocol.core.udiscovery.v3.Node.PropertiesEntry.key");
    };

    if (stream->IsSerializationDeterministic() && map_field.size() > 1) {
      for (const auto& entry : ::_pbi::MapSorterPtr<MapType>(map_field)) {
        target = WireHelper::InternalSerialize(3, entry.first, entry.second, target, stream);
        check_utf8(entry);
      }
    } else {
      for (const auto& entry : map_field) {
        target = WireHelper::InternalSerialize(3, entry.first, entry.second, target, stream);
        check_utf8(entry);
      }
    }
  }

  // .uprotocol.core.udiscovery.v3.Node.Type type = 4;
  if (this->_internal_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      4, this->_internal_type(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:uprotocol.core.udiscovery.v3.Node)
  return target;
}

size_t Node::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:uprotocol.core.udiscovery.v3.Node)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .uprotocol.core.udiscovery.v3.Node nodes = 2;
  total_size += 1UL * this->_internal_nodes_size();
  for (const auto& msg : this->_impl_.nodes_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // map<string, .uprotocol.core.udiscovery.v3.PropertyValue> properties = 3;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_properties_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::uprotocol::core::udiscovery::v3::PropertyValue >::const_iterator
      it = this->_internal_properties().begin();
      it != this->_internal_properties().end(); ++it) {
    total_size += Node_PropertiesEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // string uri = 1;
  if (!this->_internal_uri().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_uri());
  }

  // .uprotocol.core.udiscovery.v3.Node.Type type = 4;
  if (this->_internal_type() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_type());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Node::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    Node::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Node::GetClassData() const { return &_class_data_; }


void Node::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<Node*>(&to_msg);
  auto& from = static_cast<const Node&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:uprotocol.core.udiscovery.v3.Node)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.nodes_.MergeFrom(from._impl_.nodes_);
  _this->_impl_.properties_.MergeFrom(from._impl_.properties_);
  if (!from._internal_uri().empty()) {
    _this->_internal_set_uri(from._internal_uri());
  }
  if (from._internal_type() != 0) {
    _this->_internal_set_type(from._internal_type());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Node::CopyFrom(const Node& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:uprotocol.core.udiscovery.v3.Node)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Node::IsInitialized() const {
  return true;
}

void Node::InternalSwap(Node* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.nodes_.InternalSwap(&other->_impl_.nodes_);
  _impl_.properties_.InternalSwap(&other->_impl_.properties_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.uri_, lhs_arena,
      &other->_impl_.uri_, rhs_arena
  );
  swap(_impl_.type_, other->_impl_.type_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Node::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_core_2fudiscovery_2fv3_2fudiscovery_2eproto_getter, &descriptor_table_core_2fudiscovery_2fv3_2fudiscovery_2eproto_once,
      file_level_metadata_core_2fudiscovery_2fv3_2fudiscovery_2eproto[2]);
}

// ===================================================================

class UpdateNodeRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<UpdateNodeRequest>()._impl_._has_bits_);
  static const ::uprotocol::core::udiscovery::v3::Node& node(const UpdateNodeRequest* msg);
  static void set_has_ttl(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::uprotocol::core::udiscovery::v3::Node&
UpdateNodeRequest::_Internal::node(const UpdateNodeRequest* msg) {
  return *msg->_impl_.node_;
}
UpdateNodeRequest::UpdateNodeRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:uprotocol.core.udiscovery.v3.UpdateNodeRequest)
}
UpdateNodeRequest::UpdateNodeRequest(const UpdateNodeRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  UpdateNodeRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.node_){nullptr}
    , decltype(_impl_.ttl_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_node()) {
    _this->_impl_.node_ = new ::uprotocol::core::udiscovery::v3::Node(*from._impl_.node_);
  }
  _this->_impl_.ttl_ = from._impl_.ttl_;
  // @@protoc_insertion_point(copy_constructor:uprotocol.core.udiscovery.v3.UpdateNodeRequest)
}

inline void UpdateNodeRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.node_){nullptr}
    , decltype(_impl_.ttl_){0}
  };
}

UpdateNodeRequest::~UpdateNodeRequest() {
  // @@protoc_insertion_point(destructor:uprotocol.core.udiscovery.v3.UpdateNodeRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void UpdateNodeRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.node_;
}

void UpdateNodeRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void UpdateNodeRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:uprotocol.core.udiscovery.v3.UpdateNodeRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.node_ != nullptr) {
    delete _impl_.node_;
  }
  _impl_.node_ = nullptr;
  _impl_.ttl_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UpdateNodeRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .uprotocol.core.udiscovery.v3.Node node = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_node(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional int32 ttl = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _Internal::set_has_ttl(&has_bits);
          _impl_.ttl_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* UpdateNodeRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:uprotocol.core.udiscovery.v3.UpdateNodeRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .uprotocol.core.udiscovery.v3.Node node = 1;
  if (this->_internal_has_node()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::node(this),
        _Internal::node(this).GetCachedSize(), target, stream);
  }

  // optional int32 ttl = 3;
  if (_internal_has_ttl()) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(3, this->_internal_ttl(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:uprotocol.core.udiscovery.v3.UpdateNodeRequest)
  return target;
}

size_t UpdateNodeRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:uprotocol.core.udiscovery.v3.UpdateNodeRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .uprotocol.core.udiscovery.v3.Node node = 1;
  if (this->_internal_has_node()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.node_);
  }

  // optional int32 ttl = 3;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_ttl());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UpdateNodeRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    UpdateNodeRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UpdateNodeRequest::GetClassData() const { return &_class_data_; }


void UpdateNodeRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<UpdateNodeRequest*>(&to_msg);
  auto& from = static_cast<const UpdateNodeRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:uprotocol.core.udiscovery.v3.UpdateNodeRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_node()) {
    _this->_internal_mutable_node()->::uprotocol::core::udiscovery::v3::Node::MergeFrom(
        from._internal_node());
  }
  if (from._internal_has_ttl()) {
    _this->_internal_set_ttl(from._internal_ttl());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UpdateNodeRequest::CopyFrom(const UpdateNodeRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:uprotocol.core.udiscovery.v3.UpdateNodeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateNodeRequest::IsInitialized() const {
  return true;
}

void UpdateNodeRequest::InternalSwap(UpdateNodeRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(UpdateNodeRequest, _impl_.ttl_)
      + sizeof(UpdateNodeRequest::_impl_.ttl_)
      - PROTOBUF_FIELD_OFFSET(UpdateNodeRequest, _impl_.node_)>(
          reinterpret_cast<char*>(&_impl_.node_),
          reinterpret_cast<char*>(&other->_impl_.node_));
}

::PROTOBUF_NAMESPACE_ID::Metadata UpdateNodeRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_core_2fudiscovery_2fv3_2fudiscovery_2eproto_getter, &descriptor_table_core_2fudiscovery_2fv3_2fudiscovery_2eproto_once,
      file_level_metadata_core_2fudiscovery_2fv3_2fudiscovery_2eproto[3]);
}

// ===================================================================

class DeleteNodesRequest::_Internal {
 public:
};

DeleteNodesRequest::DeleteNodesRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:uprotocol.core.udiscovery.v3.DeleteNodesRequest)
}
DeleteNodesRequest::DeleteNodesRequest(const DeleteNodesRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  DeleteNodesRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.uris_){from._impl_.uris_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:uprotocol.core.udiscovery.v3.DeleteNodesRequest)
}

inline void DeleteNodesRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.uris_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

DeleteNodesRequest::~DeleteNodesRequest() {
  // @@protoc_insertion_point(destructor:uprotocol.core.udiscovery.v3.DeleteNodesRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void DeleteNodesRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.uris_.~RepeatedPtrField();
}

void DeleteNodesRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void DeleteNodesRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:uprotocol.core.udiscovery.v3.DeleteNodesRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.uris_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeleteNodesRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated string uris = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_uris();
            ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            CHK_(::_pbi::VerifyUTF8(str, "uprotocol.core.udiscovery.v3.DeleteNodesRequest.uris"));
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DeleteNodesRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:uprotocol.core.udiscovery.v3.DeleteNodesRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string uris = 1;
  for (int i = 0, n = this->_internal_uris_size(); i < n; i++) {
    const auto& s = this->_internal_uris(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "uprotocol.core.udiscovery.v3.DeleteNodesRequest.uris");
    target = stream->WriteString(1, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:uprotocol.core.udiscovery.v3.DeleteNodesRequest)
  return target;
}

size_t DeleteNodesRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:uprotocol.core.udiscovery.v3.DeleteNodesRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string uris = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(_impl_.uris_.size());
  for (int i = 0, n = _impl_.uris_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      _impl_.uris_.Get(i));
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DeleteNodesRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    DeleteNodesRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DeleteNodesRequest::GetClassData() const { return &_class_data_; }


void DeleteNodesRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<DeleteNodesRequest*>(&to_msg);
  auto& from = static_cast<const DeleteNodesRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:uprotocol.core.udiscovery.v3.DeleteNodesRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.uris_.MergeFrom(from._impl_.uris_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DeleteNodesRequest::CopyFrom(const DeleteNodesRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:uprotocol.core.udiscovery.v3.DeleteNodesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteNodesRequest::IsInitialized() const {
  return true;
}

void DeleteNodesRequest::InternalSwap(DeleteNodesRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.uris_.InternalSwap(&other->_impl_.uris_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteNodesRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_core_2fudiscovery_2fv3_2fudiscovery_2eproto_getter, &descriptor_table_core_2fudiscovery_2fv3_2fudiscovery_2eproto_once,
      file_level_metadata_core_2fudiscovery_2fv3_2fudiscovery_2eproto[4]);
}

// ===================================================================

class FindNodesRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<FindNodesRequest>()._impl_._has_bits_);
  static void set_has_depth(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

FindNodesRequest::FindNodesRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:uprotocol.core.udiscovery.v3.FindNodesRequest)
}
FindNodesRequest::FindNodesRequest(const FindNodesRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  FindNodesRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.uri_){}
    , decltype(_impl_.depth_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.uri_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.uri_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_uri().empty()) {
    _this->_impl_.uri_.Set(from._internal_uri(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.depth_ = from._impl_.depth_;
  // @@protoc_insertion_point(copy_constructor:uprotocol.core.udiscovery.v3.FindNodesRequest)
}

inline void FindNodesRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.uri_){}
    , decltype(_impl_.depth_){0}
  };
  _impl_.uri_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.uri_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

FindNodesRequest::~FindNodesRequest() {
  // @@protoc_insertion_point(destructor:uprotocol.core.udiscovery.v3.FindNodesRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void FindNodesRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.uri_.Destroy();
}

void FindNodesRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void FindNodesRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:uprotocol.core.udiscovery.v3.FindNodesRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.uri_.ClearToEmpty();
  _impl_.depth_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* FindNodesRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string uri = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_uri();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "uprotocol.core.udiscovery.v3.FindNodesRequest.uri"));
        } else
          goto handle_unusual;
        continue;
      // optional int32 depth = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _Internal::set_has_depth(&has_bits);
          _impl_.depth_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* FindNodesRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:uprotocol.core.udiscovery.v3.FindNodesRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string uri = 1;
  if (!this->_internal_uri().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_uri().data(), static_cast<int>(this->_internal_uri().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "uprotocol.core.udiscovery.v3.FindNodesRequest.uri");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_uri(), target);
  }

  // optional int32 depth = 2;
  if (_internal_has_depth()) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(2, this->_internal_depth(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:uprotocol.core.udiscovery.v3.FindNodesRequest)
  return target;
}

size_t FindNodesRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:uprotocol.core.udiscovery.v3.FindNodesRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string uri = 1;
  if (!this->_internal_uri().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_uri());
  }

  // optional int32 depth = 2;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_depth());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData FindNodesRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    FindNodesRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*FindNodesRequest::GetClassData() const { return &_class_data_; }


void FindNodesRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<FindNodesRequest*>(&to_msg);
  auto& from = static_cast<const FindNodesRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:uprotocol.core.udiscovery.v3.FindNodesRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_uri().empty()) {
    _this->_internal_set_uri(from._internal_uri());
  }
  if (from._internal_has_depth()) {
    _this->_internal_set_depth(from._internal_depth());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void FindNodesRequest::CopyFrom(const FindNodesRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:uprotocol.core.udiscovery.v3.FindNodesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FindNodesRequest::IsInitialized() const {
  return true;
}

void FindNodesRequest::InternalSwap(FindNodesRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.uri_, lhs_arena,
      &other->_impl_.uri_, rhs_arena
  );
  swap(_impl_.depth_, other->_impl_.depth_);
}

::PROTOBUF_NAMESPACE_ID::Metadata FindNodesRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_core_2fudiscovery_2fv3_2fudiscovery_2eproto_getter, &descriptor_table_core_2fudiscovery_2fv3_2fudiscovery_2eproto_once,
      file_level_metadata_core_2fudiscovery_2fv3_2fudiscovery_2eproto[5]);
}

// ===================================================================

class FindNodesResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<FindNodesResponse>()._impl_._has_bits_);
  static const ::uprotocol::v1::UStatus& status(const FindNodesResponse* msg);
  static void set_has_ttl(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::uprotocol::v1::UStatus&
FindNodesResponse::_Internal::status(const FindNodesResponse* msg) {
  return *msg->_impl_.status_;
}
void FindNodesResponse::clear_status() {
  if (GetArenaForAllocation() == nullptr && _impl_.status_ != nullptr) {
    delete _impl_.status_;
  }
  _impl_.status_ = nullptr;
}
FindNodesResponse::FindNodesResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:uprotocol.core.udiscovery.v3.FindNodesResponse)
}
FindNodesResponse::FindNodesResponse(const FindNodesResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  FindNodesResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.nodes_){from._impl_.nodes_}
    , decltype(_impl_.status_){nullptr}
    , decltype(_impl_.ttl_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_status()) {
    _this->_impl_.status_ = new ::uprotocol::v1::UStatus(*from._impl_.status_);
  }
  _this->_impl_.ttl_ = from._impl_.ttl_;
  // @@protoc_insertion_point(copy_constructor:uprotocol.core.udiscovery.v3.FindNodesResponse)
}

inline void FindNodesResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.nodes_){arena}
    , decltype(_impl_.status_){nullptr}
    , decltype(_impl_.ttl_){0}
  };
}

FindNodesResponse::~FindNodesResponse() {
  // @@protoc_insertion_point(destructor:uprotocol.core.udiscovery.v3.FindNodesResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void FindNodesResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.nodes_.~RepeatedPtrField();
  if (this != internal_default_instance()) delete _impl_.status_;
}

void FindNodesResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void FindNodesResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:uprotocol.core.udiscovery.v3.FindNodesResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.nodes_.Clear();
  if (GetArenaForAllocation() == nullptr && _impl_.status_ != nullptr) {
    delete _impl_.status_;
  }
  _impl_.status_ = nullptr;
  _impl_.ttl_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* FindNodesResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .uprotocol.core.udiscovery.v3.Node nodes = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_nodes(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      // .uprotocol.v1.UStatus status = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_status(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional int32 ttl = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _Internal::set_has_ttl(&has_bits);
          _impl_.ttl_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* FindNodesResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:uprotocol.core.udiscovery.v3.FindNodesResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .uprotocol.core.udiscovery.v3.Node nodes = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_nodes_size()); i < n; i++) {
    const auto& repfield = this->_internal_nodes(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  // .uprotocol.v1.UStatus status = 2;
  if (this->_internal_has_status()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::status(this),
        _Internal::status(this).GetCachedSize(), target, stream);
  }

  // optional int32 ttl = 3;
  if (_internal_has_ttl()) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(3, this->_internal_ttl(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:uprotocol.core.udiscovery.v3.FindNodesResponse)
  return target;
}

size_t FindNodesResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:uprotocol.core.udiscovery.v3.FindNodesResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .uprotocol.core.udiscovery.v3.Node nodes = 1;
  total_size += 1UL * this->_internal_nodes_size();
  for (const auto& msg : this->_impl_.nodes_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // .uprotocol.v1.UStatus status = 2;
  if (this->_internal_has_status()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.status_);
  }

  // optional int32 ttl = 3;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_ttl());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData FindNodesResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    FindNodesResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*FindNodesResponse::GetClassData() const { return &_class_data_; }


void FindNodesResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<FindNodesResponse*>(&to_msg);
  auto& from = static_cast<const FindNodesResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:uprotocol.core.udiscovery.v3.FindNodesResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.nodes_.MergeFrom(from._impl_.nodes_);
  if (from._internal_has_status()) {
    _this->_internal_mutable_status()->::uprotocol::v1::UStatus::MergeFrom(
        from._internal_status());
  }
  if (from._internal_has_ttl()) {
    _this->_internal_set_ttl(from._internal_ttl());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void FindNodesResponse::CopyFrom(const FindNodesResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:uprotocol.core.udiscovery.v3.FindNodesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FindNodesResponse::IsInitialized() const {
  return true;
}

void FindNodesResponse::InternalSwap(FindNodesResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.nodes_.InternalSwap(&other->_impl_.nodes_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(FindNodesResponse, _impl_.ttl_)
      + sizeof(FindNodesResponse::_impl_.ttl_)
      - PROTOBUF_FIELD_OFFSET(FindNodesResponse, _impl_.status_)>(
          reinterpret_cast<char*>(&_impl_.status_),
          reinterpret_cast<char*>(&other->_impl_.status_));
}

::PROTOBUF_NAMESPACE_ID::Metadata FindNodesResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_core_2fudiscovery_2fv3_2fudiscovery_2eproto_getter, &descriptor_table_core_2fudiscovery_2fv3_2fudiscovery_2eproto_once,
      file_level_metadata_core_2fudiscovery_2fv3_2fudiscovery_2eproto[6]);
}

// ===================================================================

class FindNodePropertiesRequest::_Internal {
 public:
};

FindNodePropertiesRequest::FindNodePropertiesRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:uprotocol.core.udiscovery.v3.FindNodePropertiesRequest)
}
FindNodePropertiesRequest::FindNodePropertiesRequest(const FindNodePropertiesRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  FindNodePropertiesRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.properties_){from._impl_.properties_}
    , decltype(_impl_.uri_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.uri_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.uri_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_uri().empty()) {
    _this->_impl_.uri_.Set(from._internal_uri(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:uprotocol.core.udiscovery.v3.FindNodePropertiesRequest)
}

inline void FindNodePropertiesRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.properties_){arena}
    , decltype(_impl_.uri_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.uri_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.uri_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

FindNodePropertiesRequest::~FindNodePropertiesRequest() {
  // @@protoc_insertion_point(destructor:uprotocol.core.udiscovery.v3.FindNodePropertiesRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void FindNodePropertiesRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.properties_.~RepeatedPtrField();
  _impl_.uri_.Destroy();
}

void FindNodePropertiesRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void FindNodePropertiesRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:uprotocol.core.udiscovery.v3.FindNodePropertiesRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.properties_.Clear();
  _impl_.uri_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* FindNodePropertiesRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string uri = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_uri();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "uprotocol.core.udiscovery.v3.FindNodePropertiesRequest.uri"));
        } else
          goto handle_unusual;
        continue;
      // repeated string properties = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_properties();
            ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            CHK_(::_pbi::VerifyUTF8(str, "uprotocol.core.udiscovery.v3.FindNodePropertiesRequest.properties"));
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* FindNodePropertiesRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:uprotocol.core.udiscovery.v3.FindNodePropertiesRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string uri = 1;
  if (!this->_internal_uri().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_uri().data(), static_cast<int>(this->_internal_uri().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "uprotocol.core.udiscovery.v3.FindNodePropertiesRequest.uri");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_uri(), target);
  }

  // repeated string properties = 2;
  for (int i = 0, n = this->_internal_properties_size(); i < n; i++) {
    const auto& s = this->_internal_properties(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "uprotocol.core.udiscovery.v3.FindNodePropertiesRequest.properties");
    target = stream->WriteString(2, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:uprotocol.core.udiscovery.v3.FindNodePropertiesRequest)
  return target;
}

size_t FindNodePropertiesRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:uprotocol.core.udiscovery.v3.FindNodePropertiesRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string properties = 2;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(_impl_.properties_.size());
  for (int i = 0, n = _impl_.properties_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      _impl_.properties_.Get(i));
  }

  // string uri = 1;
  if (!this->_internal_uri().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_uri());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData FindNodePropertiesRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    FindNodePropertiesRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*FindNodePropertiesRequest::GetClassData() const { return &_class_data_; }


void FindNodePropertiesRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<FindNodePropertiesRequest*>(&to_msg);
  auto& from = static_cast<const FindNodePropertiesRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:uprotocol.core.udiscovery.v3.FindNodePropertiesRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.properties_.MergeFrom(from._impl_.properties_);
  if (!from._internal_uri().empty()) {
    _this->_internal_set_uri(from._internal_uri());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void FindNodePropertiesRequest::CopyFrom(const FindNodePropertiesRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:uprotocol.core.udiscovery.v3.FindNodePropertiesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FindNodePropertiesRequest::IsInitialized() const {
  return true;
}

void FindNodePropertiesRequest::InternalSwap(FindNodePropertiesRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.properties_.InternalSwap(&other->_impl_.properties_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.uri_, lhs_arena,
      &other->_impl_.uri_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata FindNodePropertiesRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_core_2fudiscovery_2fv3_2fudiscovery_2eproto_getter, &descriptor_table_core_2fudiscovery_2fv3_2fudiscovery_2eproto_once,
      file_level_metadata_core_2fudiscovery_2fv3_2fudiscovery_2eproto[7]);
}

// ===================================================================

FindNodePropertiesResponse_PropertiesEntry_DoNotUse::FindNodePropertiesResponse_PropertiesEntry_DoNotUse() {}
FindNodePropertiesResponse_PropertiesEntry_DoNotUse::FindNodePropertiesResponse_PropertiesEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void FindNodePropertiesResponse_PropertiesEntry_DoNotUse::MergeFrom(const FindNodePropertiesResponse_PropertiesEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata FindNodePropertiesResponse_PropertiesEntry_DoNotUse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_core_2fudiscovery_2fv3_2fudiscovery_2eproto_getter, &descriptor_table_core_2fudiscovery_2fv3_2fudiscovery_2eproto_once,
      file_level_metadata_core_2fudiscovery_2fv3_2fudiscovery_2eproto[8]);
}

// ===================================================================

class FindNodePropertiesResponse::_Internal {
 public:
  static const ::uprotocol::v1::UStatus& status(const FindNodePropertiesResponse* msg);
};

const ::uprotocol::v1::UStatus&
FindNodePropertiesResponse::_Internal::status(const FindNodePropertiesResponse* msg) {
  return *msg->_impl_.status_;
}
void FindNodePropertiesResponse::clear_status() {
  if (GetArenaForAllocation() == nullptr && _impl_.status_ != nullptr) {
    delete _impl_.status_;
  }
  _impl_.status_ = nullptr;
}
FindNodePropertiesResponse::FindNodePropertiesResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  if (arena != nullptr && !is_message_owned) {
    arena->OwnCustomDestructor(this, &FindNodePropertiesResponse::ArenaDtor);
  }
  // @@protoc_insertion_point(arena_constructor:uprotocol.core.udiscovery.v3.FindNodePropertiesResponse)
}
FindNodePropertiesResponse::FindNodePropertiesResponse(const FindNodePropertiesResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  FindNodePropertiesResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      /*decltype(_impl_.properties_)*/{}
    , decltype(_impl_.status_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.properties_.MergeFrom(from._impl_.properties_);
  if (from._internal_has_status()) {
    _this->_impl_.status_ = new ::uprotocol::v1::UStatus(*from._impl_.status_);
  }
  // @@protoc_insertion_point(copy_constructor:uprotocol.core.udiscovery.v3.FindNodePropertiesResponse)
}

inline void FindNodePropertiesResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      /*decltype(_impl_.properties_)*/{::_pbi::ArenaInitialized(), arena}
    , decltype(_impl_.status_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

FindNodePropertiesResponse::~FindNodePropertiesResponse() {
  // @@protoc_insertion_point(destructor:uprotocol.core.udiscovery.v3.FindNodePropertiesResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    ArenaDtor(this);
    return;
  }
  SharedDtor();
}

inline void FindNodePropertiesResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.properties_.Destruct();
  _impl_.properties_.~MapField();
  if (this != internal_default_instance()) delete _impl_.status_;
}

void FindNodePropertiesResponse::ArenaDtor(void* object) {
  FindNodePropertiesResponse* _this = reinterpret_cast< FindNodePropertiesResponse* >(object);
  _this->_impl_.properties_.Destruct();
}
void FindNodePropertiesResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void FindNodePropertiesResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:uprotocol.core.udiscovery.v3.FindNodePropertiesResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.properties_.Clear();
  if (GetArenaForAllocation() == nullptr && _impl_.status_ != nullptr) {
    delete _impl_.status_;
  }
  _impl_.status_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* FindNodePropertiesResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // map<string, .uprotocol.core.udiscovery.v3.PropertyValue> properties = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&_impl_.properties_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      // .uprotocol.v1.UStatus status = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_status(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* FindNodePropertiesResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:uprotocol.core.udiscovery.v3.FindNodePropertiesResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, .uprotocol.core.udiscovery.v3.PropertyValue> properties = 1;
  if (!this->_internal_properties().empty()) {
    using MapType = ::_pb::Map<std::string, ::uprotocol::core::udiscovery::v3::PropertyValue>;
    using WireHelper = FindNodePropertiesResponse_PropertiesEntry_DoNotUse::Funcs;
    const auto& map_field = this->_internal_properties();
    auto check_utf8 = [](const MapType::value_type& entry) {
      (void)entry;
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        entry.first.data(), static_cast<int>(entry.first.length()),
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
        "uprotocol.core.udiscovery.v3.FindNodePropertiesResponse.PropertiesEntry.key");
    };

    if (stream->IsSerializationDeterministic() && map_field.size() > 1) {
      for (const auto& entry : ::_pbi::MapSorterPtr<MapType>(map_field)) {
        target = WireHelper::InternalSerialize(1, entry.first, entry.second, target, stream);
        check_utf8(entry);
      }
    } else {
      for (const auto& entry : map_field) {
        target = WireHelper::InternalSerialize(1, entry.first, entry.second, target, stream);
        check_utf8(entry);
      }
    }
  }

  // .uprotocol.v1.UStatus status = 2;
  if (this->_internal_has_status()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::status(this),
        _Internal::status(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:uprotocol.core.udiscovery.v3.FindNodePropertiesResponse)
  return target;
}

size_t FindNodePropertiesResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:uprotocol.core.udiscovery.v3.FindNodePropertiesResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, .uprotocol.core.udiscovery.v3.PropertyValue> properties = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_properties_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::uprotocol::core::udiscovery::v3::PropertyValue >::const_iterator
      it = this->_internal_properties().begin();
      it != this->_internal_properties().end(); ++it) {
    total_size += FindNodePropertiesResponse_PropertiesEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // .uprotocol.v1.UStatus status = 2;
  if (this->_internal_has_status()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.status_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData FindNodePropertiesResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    FindNodePropertiesResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*FindNodePropertiesResponse::GetClassData() const { return &_class_data_; }


void FindNodePropertiesResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<FindNodePropertiesResponse*>(&to_msg);
  auto& from = static_cast<const FindNodePropertiesResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:uprotocol.core.udiscovery.v3.FindNodePropertiesResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.properties_.MergeFrom(from._impl_.properties_);
  if (from._internal_has_status()) {
    _this->_internal_mutable_status()->::uprotocol::v1::UStatus::MergeFrom(
        from._internal_status());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void FindNodePropertiesResponse::CopyFrom(const FindNodePropertiesResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:uprotocol.core.udiscovery.v3.FindNodePropertiesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FindNodePropertiesResponse::IsInitialized() const {
  return true;
}

void FindNodePropertiesResponse::InternalSwap(FindNodePropertiesResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.properties_.InternalSwap(&other->_impl_.properties_);
  swap(_impl_.status_, other->_impl_.status_);
}

::PROTOBUF_NAMESPACE_ID::Metadata FindNodePropertiesResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_core_2fudiscovery_2fv3_2fudiscovery_2eproto_getter, &descriptor_table_core_2fudiscovery_2fv3_2fudiscovery_2eproto_once,
      file_level_metadata_core_2fudiscovery_2fv3_2fudiscovery_2eproto[9]);
}

// ===================================================================

class AddNodesRequest::_Internal {
 public:
};

AddNodesRequest::AddNodesRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:uprotocol.core.udiscovery.v3.AddNodesRequest)
}
AddNodesRequest::AddNodesRequest(const AddNodesRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  AddNodesRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.nodes_){from._impl_.nodes_}
    , decltype(_impl_.parent_uri_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.parent_uri_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.parent_uri_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_parent_uri().empty()) {
    _this->_impl_.parent_uri_.Set(from._internal_parent_uri(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:uprotocol.core.udiscovery.v3.AddNodesRequest)
}

inline void AddNodesRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.nodes_){arena}
    , decltype(_impl_.parent_uri_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.parent_uri_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.parent_uri_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

AddNodesRequest::~AddNodesRequest() {
  // @@protoc_insertion_point(destructor:uprotocol.core.udiscovery.v3.AddNodesRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void AddNodesRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.nodes_.~RepeatedPtrField();
  _impl_.parent_uri_.Destroy();
}

void AddNodesRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void AddNodesRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:uprotocol.core.udiscovery.v3.AddNodesRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.nodes_.Clear();
  _impl_.parent_uri_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AddNodesRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string parent_uri = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_parent_uri();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "uprotocol.core.udiscovery.v3.AddNodesRequest.parent_uri"));
        } else
          goto handle_unusual;
        continue;
      // repeated .uprotocol.core.udiscovery.v3.Node nodes = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_nodes(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* AddNodesRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:uprotocol.core.udiscovery.v3.AddNodesRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string parent_uri = 1;
  if (!this->_internal_parent_uri().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_parent_uri().data(), static_cast<int>(this->_internal_parent_uri().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "uprotocol.core.udiscovery.v3.AddNodesRequest.parent_uri");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_parent_uri(), target);
  }

  // repeated .uprotocol.core.udiscovery.v3.Node nodes = 2;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_nodes_size()); i < n; i++) {
    const auto& repfield = this->_internal_nodes(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:uprotocol.core.udiscovery.v3.AddNodesRequest)
  return target;
}

size_t AddNodesRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:uprotocol.core.udiscovery.v3.AddNodesRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .uprotocol.core.udiscovery.v3.Node nodes = 2;
  total_size += 1UL * this->_internal_nodes_size();
  for (const auto& msg : this->_impl_.nodes_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string parent_uri = 1;
  if (!this->_internal_parent_uri().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_parent_uri());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData AddNodesRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    AddNodesRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*AddNodesRequest::GetClassData() const { return &_class_data_; }


void AddNodesRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<AddNodesRequest*>(&to_msg);
  auto& from = static_cast<const AddNodesRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:uprotocol.core.udiscovery.v3.AddNodesRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.nodes_.MergeFrom(from._impl_.nodes_);
  if (!from._internal_parent_uri().empty()) {
    _this->_internal_set_parent_uri(from._internal_parent_uri());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void AddNodesRequest::CopyFrom(const AddNodesRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:uprotocol.core.udiscovery.v3.AddNodesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddNodesRequest::IsInitialized() const {
  return true;
}

void AddNodesRequest::InternalSwap(AddNodesRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.nodes_.InternalSwap(&other->_impl_.nodes_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.parent_uri_, lhs_arena,
      &other->_impl_.parent_uri_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata AddNodesRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_core_2fudiscovery_2fv3_2fudiscovery_2eproto_getter, &descriptor_table_core_2fudiscovery_2fv3_2fudiscovery_2eproto_once,
      file_level_metadata_core_2fudiscovery_2fv3_2fudiscovery_2eproto[10]);
}

// ===================================================================

class UpdatePropertyRequest::_Internal {
 public:
  static const ::uprotocol::core::udiscovery::v3::PropertyValue& value(const UpdatePropertyRequest* msg);
};

const ::uprotocol::core::udiscovery::v3::PropertyValue&
UpdatePropertyRequest::_Internal::value(const UpdatePropertyRequest* msg) {
  return *msg->_impl_.value_;
}
UpdatePropertyRequest::UpdatePropertyRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:uprotocol.core.udiscovery.v3.UpdatePropertyRequest)
}
UpdatePropertyRequest::UpdatePropertyRequest(const UpdatePropertyRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  UpdatePropertyRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.uri_){}
    , decltype(_impl_.property_){}
    , decltype(_impl_.value_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.uri_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.uri_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_uri().empty()) {
    _this->_impl_.uri_.Set(from._internal_uri(), 
      _this->GetArenaForAllocation());
  }
  _impl_.property_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.property_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_property().empty()) {
    _this->_impl_.property_.Set(from._internal_property(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_value()) {
    _this->_impl_.value_ = new ::uprotocol::core::udiscovery::v3::PropertyValue(*from._impl_.value_);
  }
  // @@protoc_insertion_point(copy_constructor:uprotocol.core.udiscovery.v3.UpdatePropertyRequest)
}

inline void UpdatePropertyRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.uri_){}
    , decltype(_impl_.property_){}
    , decltype(_impl_.value_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.uri_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.uri_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.property_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.property_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

UpdatePropertyRequest::~UpdatePropertyRequest() {
  // @@protoc_insertion_point(destructor:uprotocol.core.udiscovery.v3.UpdatePropertyRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void UpdatePropertyRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.uri_.Destroy();
  _impl_.property_.Destroy();
  if (this != internal_default_instance()) delete _impl_.value_;
}

void UpdatePropertyRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void UpdatePropertyRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:uprotocol.core.udiscovery.v3.UpdatePropertyRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.uri_.ClearToEmpty();
  _impl_.property_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.value_ != nullptr) {
    delete _impl_.value_;
  }
  _impl_.value_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UpdatePropertyRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string uri = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_uri();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "uprotocol.core.udiscovery.v3.UpdatePropertyRequest.uri"));
        } else
          goto handle_unusual;
        continue;
      // string property = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_property();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "uprotocol.core.udiscovery.v3.UpdatePropertyRequest.property"));
        } else
          goto handle_unusual;
        continue;
      // .uprotocol.core.udiscovery.v3.PropertyValue value = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_value(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* UpdatePropertyRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:uprotocol.core.udiscovery.v3.UpdatePropertyRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string uri = 1;
  if (!this->_internal_uri().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_uri().data(), static_cast<int>(this->_internal_uri().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "uprotocol.core.udiscovery.v3.UpdatePropertyRequest.uri");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_uri(), target);
  }

  // string property = 2;
  if (!this->_internal_property().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_property().data(), static_cast<int>(this->_internal_property().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "uprotocol.core.udiscovery.v3.UpdatePropertyRequest.property");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_property(), target);
  }

  // .uprotocol.core.udiscovery.v3.PropertyValue value = 3;
  if (this->_internal_has_value()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::value(this),
        _Internal::value(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:uprotocol.core.udiscovery.v3.UpdatePropertyRequest)
  return target;
}

size_t UpdatePropertyRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:uprotocol.core.udiscovery.v3.UpdatePropertyRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string uri = 1;
  if (!this->_internal_uri().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_uri());
  }

  // string property = 2;
  if (!this->_internal_property().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_property());
  }

  // .uprotocol.core.udiscovery.v3.PropertyValue value = 3;
  if (this->_internal_has_value()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.value_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UpdatePropertyRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    UpdatePropertyRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UpdatePropertyRequest::GetClassData() const { return &_class_data_; }


void UpdatePropertyRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<UpdatePropertyRequest*>(&to_msg);
  auto& from = static_cast<const UpdatePropertyRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:uprotocol.core.udiscovery.v3.UpdatePropertyRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_uri().empty()) {
    _this->_internal_set_uri(from._internal_uri());
  }
  if (!from._internal_property().empty()) {
    _this->_internal_set_property(from._internal_property());
  }
  if (from._internal_has_value()) {
    _this->_internal_mutable_value()->::uprotocol::core::udiscovery::v3::PropertyValue::MergeFrom(
        from._internal_value());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UpdatePropertyRequest::CopyFrom(const UpdatePropertyRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:uprotocol.core.udiscovery.v3.UpdatePropertyRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdatePropertyRequest::IsInitialized() const {
  return true;
}

void UpdatePropertyRequest::InternalSwap(UpdatePropertyRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.uri_, lhs_arena,
      &other->_impl_.uri_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.property_, lhs_arena,
      &other->_impl_.property_, rhs_arena
  );
  swap(_impl_.value_, other->_impl_.value_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UpdatePropertyRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_core_2fudiscovery_2fv3_2fudiscovery_2eproto_getter, &descriptor_table_core_2fudiscovery_2fv3_2fudiscovery_2eproto_once,
      file_level_metadata_core_2fudiscovery_2fv3_2fudiscovery_2eproto[11]);
}

// ===================================================================

class Notification::_Internal {
 public:
  using HasBits = decltype(std::declval<Notification>()._impl_._has_bits_);
  static void set_has_parent_uri(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_ttl(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

Notification::Notification(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:uprotocol.core.udiscovery.v3.Notification)
}
Notification::Notification(const Notification& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  Notification* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.uri_){}
    , decltype(_impl_.parent_uri_){}
    , decltype(_impl_.operation_){}
    , decltype(_impl_.ttl_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.uri_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.uri_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_uri().empty()) {
    _this->_impl_.uri_.Set(from._internal_uri(), 
      _this->GetArenaForAllocation());
  }
  _impl_.parent_uri_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.parent_uri_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_parent_uri()) {
    _this->_impl_.parent_uri_.Set(from._internal_parent_uri(), 
      _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.operation_, &from._impl_.operation_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.ttl_) -
    reinterpret_cast<char*>(&_impl_.operation_)) + sizeof(_impl_.ttl_));
  // @@protoc_insertion_point(copy_constructor:uprotocol.core.udiscovery.v3.Notification)
}

inline void Notification::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.uri_){}
    , decltype(_impl_.parent_uri_){}
    , decltype(_impl_.operation_){0}
    , decltype(_impl_.ttl_){0}
  };
  _impl_.uri_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.uri_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.parent_uri_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.parent_uri_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

Notification::~Notification() {
  // @@protoc_insertion_point(destructor:uprotocol.core.udiscovery.v3.Notification)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Notification::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.uri_.Destroy();
  _impl_.parent_uri_.Destroy();
}

void Notification::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void Notification::Clear() {
// @@protoc_insertion_point(message_clear_start:uprotocol.core.udiscovery.v3.Notification)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.uri_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.parent_uri_.ClearNonDefaultToEmpty();
  }
  _impl_.operation_ = 0;
  _impl_.ttl_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Notification::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string uri = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_uri();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "uprotocol.core.udiscovery.v3.Notification.uri"));
        } else
          goto handle_unusual;
        continue;
      // optional string parent_uri = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_parent_uri();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "uprotocol.core.udiscovery.v3.Notification.parent_uri"));
        } else
          goto handle_unusual;
        continue;
      // .uprotocol.core.udiscovery.v3.Notification.Operation operation = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_operation(static_cast<::uprotocol::core::udiscovery::v3::Notification_Operation>(val));
        } else
          goto handle_unusual;
        continue;
      // optional int32 ttl = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _Internal::set_has_ttl(&has_bits);
          _impl_.ttl_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Notification::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:uprotocol.core.udiscovery.v3.Notification)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string uri = 1;
  if (!this->_internal_uri().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_uri().data(), static_cast<int>(this->_internal_uri().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "uprotocol.core.udiscovery.v3.Notification.uri");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_uri(), target);
  }

  // optional string parent_uri = 2;
  if (_internal_has_parent_uri()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_parent_uri().data(), static_cast<int>(this->_internal_parent_uri().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "uprotocol.core.udiscovery.v3.Notification.parent_uri");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_parent_uri(), target);
  }

  // .uprotocol.core.udiscovery.v3.Notification.Operation operation = 3;
  if (this->_internal_operation() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      3, this->_internal_operation(), target);
  }

  // optional int32 ttl = 4;
  if (_internal_has_ttl()) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(4, this->_internal_ttl(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:uprotocol.core.udiscovery.v3.Notification)
  return target;
}

size_t Notification::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:uprotocol.core.udiscovery.v3.Notification)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string uri = 1;
  if (!this->_internal_uri().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_uri());
  }

  // optional string parent_uri = 2;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_parent_uri());
  }

  // .uprotocol.core.udiscovery.v3.Notification.Operation operation = 3;
  if (this->_internal_operation() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_operation());
  }

  // optional int32 ttl = 4;
  if (cached_has_bits & 0x00000002u) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_ttl());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Notification::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    Notification::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Notification::GetClassData() const { return &_class_data_; }


void Notification::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<Notification*>(&to_msg);
  auto& from = static_cast<const Notification&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:uprotocol.core.udiscovery.v3.Notification)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_uri().empty()) {
    _this->_internal_set_uri(from._internal_uri());
  }
  if (from._internal_has_parent_uri()) {
    _this->_internal_set_parent_uri(from._internal_parent_uri());
  }
  if (from._internal_operation() != 0) {
    _this->_internal_set_operation(from._internal_operation());
  }
  if (from._internal_has_ttl()) {
    _this->_internal_set_ttl(from._internal_ttl());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Notification::CopyFrom(const Notification& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:uprotocol.core.udiscovery.v3.Notification)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Notification::IsInitialized() const {
  return true;
}

void Notification::InternalSwap(Notification* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.uri_, lhs_arena,
      &other->_impl_.uri_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.parent_uri_, lhs_arena,
      &other->_impl_.parent_uri_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Notification, _impl_.ttl_)
      + sizeof(Notification::_impl_.ttl_)
      - PROTOBUF_FIELD_OFFSET(Notification, _impl_.operation_)>(
          reinterpret_cast<char*>(&_impl_.operation_),
          reinterpret_cast<char*>(&other->_impl_.operation_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Notification::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_core_2fudiscovery_2fv3_2fudiscovery_2eproto_getter, &descriptor_table_core_2fudiscovery_2fv3_2fudiscovery_2eproto_once,
      file_level_metadata_core_2fudiscovery_2fv3_2fudiscovery_2eproto[12]);
}

// ===================================================================

class ObserverInfo::_Internal {
 public:
};

ObserverInfo::ObserverInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:uprotocol.core.udiscovery.v3.ObserverInfo)
}
ObserverInfo::ObserverInfo(const ObserverInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ObserverInfo* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.uri_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.uri_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.uri_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_uri().empty()) {
    _this->_impl_.uri_.Set(from._internal_uri(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:uprotocol.core.udiscovery.v3.ObserverInfo)
}

inline void ObserverInfo::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.uri_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.uri_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.uri_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ObserverInfo::~ObserverInfo() {
  // @@protoc_insertion_point(destructor:uprotocol.core.udiscovery.v3.ObserverInfo)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ObserverInfo::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.uri_.Destroy();
}

void ObserverInfo::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ObserverInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:uprotocol.core.udiscovery.v3.ObserverInfo)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.uri_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ObserverInfo::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string uri = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_uri();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "uprotocol.core.udiscovery.v3.ObserverInfo.uri"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ObserverInfo::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:uprotocol.core.udiscovery.v3.ObserverInfo)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string uri = 1;
  if (!this->_internal_uri().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_uri().data(), static_cast<int>(this->_internal_uri().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "uprotocol.core.udiscovery.v3.ObserverInfo.uri");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_uri(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:uprotocol.core.udiscovery.v3.ObserverInfo)
  return target;
}

size_t ObserverInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:uprotocol.core.udiscovery.v3.ObserverInfo)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string uri = 1;
  if (!this->_internal_uri().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_uri());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ObserverInfo::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ObserverInfo::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ObserverInfo::GetClassData() const { return &_class_data_; }


void ObserverInfo::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ObserverInfo*>(&to_msg);
  auto& from = static_cast<const ObserverInfo&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:uprotocol.core.udiscovery.v3.ObserverInfo)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_uri().empty()) {
    _this->_internal_set_uri(from._internal_uri());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ObserverInfo::CopyFrom(const ObserverInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:uprotocol.core.udiscovery.v3.ObserverInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ObserverInfo::IsInitialized() const {
  return true;
}

void ObserverInfo::InternalSwap(ObserverInfo* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.uri_, lhs_arena,
      &other->_impl_.uri_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata ObserverInfo::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_core_2fudiscovery_2fv3_2fudiscovery_2eproto_getter, &descriptor_table_core_2fudiscovery_2fv3_2fudiscovery_2eproto_once,
      file_level_metadata_core_2fudiscovery_2fv3_2fudiscovery_2eproto[13]);
}

// ===================================================================

class NotificationsRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<NotificationsRequest>()._impl_._has_bits_);
  static const ::uprotocol::core::udiscovery::v3::ObserverInfo& observer(const NotificationsRequest* msg);
  static void set_has_depth(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::uprotocol::core::udiscovery::v3::ObserverInfo&
NotificationsRequest::_Internal::observer(const NotificationsRequest* msg) {
  return *msg->_impl_.observer_;
}
NotificationsRequest::NotificationsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:uprotocol.core.udiscovery.v3.NotificationsRequest)
}
NotificationsRequest::NotificationsRequest(const NotificationsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  NotificationsRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.uris_){from._impl_.uris_}
    , decltype(_impl_.observer_){nullptr}
    , decltype(_impl_.depth_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_observer()) {
    _this->_impl_.observer_ = new ::uprotocol::core::udiscovery::v3::ObserverInfo(*from._impl_.observer_);
  }
  _this->_impl_.depth_ = from._impl_.depth_;
  // @@protoc_insertion_point(copy_constructor:uprotocol.core.udiscovery.v3.NotificationsRequest)
}

inline void NotificationsRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.uris_){arena}
    , decltype(_impl_.observer_){nullptr}
    , decltype(_impl_.depth_){0}
  };
}

NotificationsRequest::~NotificationsRequest() {
  // @@protoc_insertion_point(destructor:uprotocol.core.udiscovery.v3.NotificationsRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void NotificationsRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.uris_.~RepeatedPtrField();
  if (this != internal_default_instance()) delete _impl_.observer_;
}

void NotificationsRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void NotificationsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:uprotocol.core.udiscovery.v3.NotificationsRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.uris_.Clear();
  if (GetArenaForAllocation() == nullptr && _impl_.observer_ != nullptr) {
    delete _impl_.observer_;
  }
  _impl_.observer_ = nullptr;
  _impl_.depth_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* NotificationsRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated string uris = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_uris();
            ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            CHK_(::_pbi::VerifyUTF8(str, "uprotocol.core.udiscovery.v3.NotificationsRequest.uris"));
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      // .uprotocol.core.udiscovery.v3.ObserverInfo observer = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_observer(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional int32 depth = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _Internal::set_has_depth(&has_bits);
          _impl_.depth_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* NotificationsRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:uprotocol.core.udiscovery.v3.NotificationsRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string uris = 1;
  for (int i = 0, n = this->_internal_uris_size(); i < n; i++) {
    const auto& s = this->_internal_uris(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "uprotocol.core.udiscovery.v3.NotificationsRequest.uris");
    target = stream->WriteString(1, s, target);
  }

  // .uprotocol.core.udiscovery.v3.ObserverInfo observer = 2;
  if (this->_internal_has_observer()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::observer(this),
        _Internal::observer(this).GetCachedSize(), target, stream);
  }

  // optional int32 depth = 3;
  if (_internal_has_depth()) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(3, this->_internal_depth(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:uprotocol.core.udiscovery.v3.NotificationsRequest)
  return target;
}

size_t NotificationsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:uprotocol.core.udiscovery.v3.NotificationsRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string uris = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(_impl_.uris_.size());
  for (int i = 0, n = _impl_.uris_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      _impl_.uris_.Get(i));
  }

  // .uprotocol.core.udiscovery.v3.ObserverInfo observer = 2;
  if (this->_internal_has_observer()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.observer_);
  }

  // optional int32 depth = 3;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_depth());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData NotificationsRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    NotificationsRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*NotificationsRequest::GetClassData() const { return &_class_data_; }


void NotificationsRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<NotificationsRequest*>(&to_msg);
  auto& from = static_cast<const NotificationsRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:uprotocol.core.udiscovery.v3.NotificationsRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.uris_.MergeFrom(from._impl_.uris_);
  if (from._internal_has_observer()) {
    _this->_internal_mutable_observer()->::uprotocol::core::udiscovery::v3::ObserverInfo::MergeFrom(
        from._internal_observer());
  }
  if (from._internal_has_depth()) {
    _this->_internal_set_depth(from._internal_depth());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void NotificationsRequest::CopyFrom(const NotificationsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:uprotocol.core.udiscovery.v3.NotificationsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NotificationsRequest::IsInitialized() const {
  return true;
}

void NotificationsRequest::InternalSwap(NotificationsRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.uris_.InternalSwap(&other->_impl_.uris_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(NotificationsRequest, _impl_.depth_)
      + sizeof(NotificationsRequest::_impl_.depth_)
      - PROTOBUF_FIELD_OFFSET(NotificationsRequest, _impl_.observer_)>(
          reinterpret_cast<char*>(&_impl_.observer_),
          reinterpret_cast<char*>(&other->_impl_.observer_));
}

::PROTOBUF_NAMESPACE_ID::Metadata NotificationsRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_core_2fudiscovery_2fv3_2fudiscovery_2eproto_getter, &descriptor_table_core_2fudiscovery_2fv3_2fudiscovery_2eproto_once,
      file_level_metadata_core_2fudiscovery_2fv3_2fudiscovery_2eproto[14]);
}

// ===================================================================

class ResolveUriRequest::_Internal {
 public:
  static const ::uprotocol::v1::UUri& uri(const ResolveUriRequest* msg);
};

const ::uprotocol::v1::UUri&
ResolveUriRequest::_Internal::uri(const ResolveUriRequest* msg) {
  return *msg->_impl_.uri_;
}
void ResolveUriRequest::clear_uri() {
  if (GetArenaForAllocation() == nullptr && _impl_.uri_ != nullptr) {
    delete _impl_.uri_;
  }
  _impl_.uri_ = nullptr;
}
ResolveUriRequest::ResolveUriRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:uprotocol.core.udiscovery.v3.ResolveUriRequest)
}
ResolveUriRequest::ResolveUriRequest(const ResolveUriRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ResolveUriRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.uri_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_uri()) {
    _this->_impl_.uri_ = new ::uprotocol::v1::UUri(*from._impl_.uri_);
  }
  // @@protoc_insertion_point(copy_constructor:uprotocol.core.udiscovery.v3.ResolveUriRequest)
}

inline void ResolveUriRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.uri_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

ResolveUriRequest::~ResolveUriRequest() {
  // @@protoc_insertion_point(destructor:uprotocol.core.udiscovery.v3.ResolveUriRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ResolveUriRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.uri_;
}

void ResolveUriRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ResolveUriRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:uprotocol.core.udiscovery.v3.ResolveUriRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.uri_ != nullptr) {
    delete _impl_.uri_;
  }
  _impl_.uri_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ResolveUriRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .uprotocol.v1.UUri uri = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_uri(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ResolveUriRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:uprotocol.core.udiscovery.v3.ResolveUriRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .uprotocol.v1.UUri uri = 1;
  if (this->_internal_has_uri()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::uri(this),
        _Internal::uri(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:uprotocol.core.udiscovery.v3.ResolveUriRequest)
  return target;
}

size_t ResolveUriRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:uprotocol.core.udiscovery.v3.ResolveUriRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .uprotocol.v1.UUri uri = 1;
  if (this->_internal_has_uri()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.uri_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ResolveUriRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ResolveUriRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ResolveUriRequest::GetClassData() const { return &_class_data_; }


void ResolveUriRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ResolveUriRequest*>(&to_msg);
  auto& from = static_cast<const ResolveUriRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:uprotocol.core.udiscovery.v3.ResolveUriRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_uri()) {
    _this->_internal_mutable_uri()->::uprotocol::v1::UUri::MergeFrom(
        from._internal_uri());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ResolveUriRequest::CopyFrom(const ResolveUriRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:uprotocol.core.udiscovery.v3.ResolveUriRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResolveUriRequest::IsInitialized() const {
  return true;
}

void ResolveUriRequest::InternalSwap(ResolveUriRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.uri_, other->_impl_.uri_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ResolveUriRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_core_2fudiscovery_2fv3_2fudiscovery_2eproto_getter, &descriptor_table_core_2fudiscovery_2fv3_2fudiscovery_2eproto_once,
      file_level_metadata_core_2fudiscovery_2fv3_2fudiscovery_2eproto[15]);
}

// ===================================================================

class ResolveUriResponse::_Internal {
 public:
  static const ::uprotocol::v1::UUri& uri(const ResolveUriResponse* msg);
  static const ::uprotocol::v1::UStatus& status(const ResolveUriResponse* msg);
};

const ::uprotocol::v1::UUri&
ResolveUriResponse::_Internal::uri(const ResolveUriResponse* msg) {
  return *msg->_impl_.uri_;
}
const ::uprotocol::v1::UStatus&
ResolveUriResponse::_Internal::status(const ResolveUriResponse* msg) {
  return *msg->_impl_.status_;
}
void ResolveUriResponse::clear_uri() {
  if (GetArenaForAllocation() == nullptr && _impl_.uri_ != nullptr) {
    delete _impl_.uri_;
  }
  _impl_.uri_ = nullptr;
}
void ResolveUriResponse::clear_status() {
  if (GetArenaForAllocation() == nullptr && _impl_.status_ != nullptr) {
    delete _impl_.status_;
  }
  _impl_.status_ = nullptr;
}
ResolveUriResponse::ResolveUriResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:uprotocol.core.udiscovery.v3.ResolveUriResponse)
}
ResolveUriResponse::ResolveUriResponse(const ResolveUriResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ResolveUriResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.uri_){nullptr}
    , decltype(_impl_.status_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_uri()) {
    _this->_impl_.uri_ = new ::uprotocol::v1::UUri(*from._impl_.uri_);
  }
  if (from._internal_has_status()) {
    _this->_impl_.status_ = new ::uprotocol::v1::UStatus(*from._impl_.status_);
  }
  // @@protoc_insertion_point(copy_constructor:uprotocol.core.udiscovery.v3.ResolveUriResponse)
}

inline void ResolveUriResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.uri_){nullptr}
    , decltype(_impl_.status_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

ResolveUriResponse::~ResolveUriResponse() {
  // @@protoc_insertion_point(destructor:uprotocol.core.udiscovery.v3.ResolveUriResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ResolveUriResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.uri_;
  if (this != internal_default_instance()) delete _impl_.status_;
}

void ResolveUriResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ResolveUriResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:uprotocol.core.udiscovery.v3.ResolveUriResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.uri_ != nullptr) {
    delete _impl_.uri_;
  }
  _impl_.uri_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.status_ != nullptr) {
    delete _impl_.status_;
  }
  _impl_.status_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ResolveUriResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .uprotocol.v1.UUri uri = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_uri(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .uprotocol.v1.UStatus status = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_status(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ResolveUriResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:uprotocol.core.udiscovery.v3.ResolveUriResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .uprotocol.v1.UUri uri = 1;
  if (this->_internal_has_uri()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::uri(this),
        _Internal::uri(this).GetCachedSize(), target, stream);
  }

  // .uprotocol.v1.UStatus status = 3;
  if (this->_internal_has_status()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::status(this),
        _Internal::status(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:uprotocol.core.udiscovery.v3.ResolveUriResponse)
  return target;
}

size_t ResolveUriResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:uprotocol.core.udiscovery.v3.ResolveUriResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .uprotocol.v1.UUri uri = 1;
  if (this->_internal_has_uri()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.uri_);
  }

  // .uprotocol.v1.UStatus status = 3;
  if (this->_internal_has_status()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.status_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ResolveUriResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ResolveUriResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ResolveUriResponse::GetClassData() const { return &_class_data_; }


void ResolveUriResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ResolveUriResponse*>(&to_msg);
  auto& from = static_cast<const ResolveUriResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:uprotocol.core.udiscovery.v3.ResolveUriResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_uri()) {
    _this->_internal_mutable_uri()->::uprotocol::v1::UUri::MergeFrom(
        from._internal_uri());
  }
  if (from._internal_has_status()) {
    _this->_internal_mutable_status()->::uprotocol::v1::UStatus::MergeFrom(
        from._internal_status());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ResolveUriResponse::CopyFrom(const ResolveUriResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:uprotocol.core.udiscovery.v3.ResolveUriResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResolveUriResponse::IsInitialized() const {
  return true;
}

void ResolveUriResponse::InternalSwap(ResolveUriResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ResolveUriResponse, _impl_.status_)
      + sizeof(ResolveUriResponse::_impl_.status_)
      - PROTOBUF_FIELD_OFFSET(ResolveUriResponse, _impl_.uri_)>(
          reinterpret_cast<char*>(&_impl_.uri_),
          reinterpret_cast<char*>(&other->_impl_.uri_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ResolveUriResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_core_2fudiscovery_2fv3_2fudiscovery_2eproto_getter, &descriptor_table_core_2fudiscovery_2fv3_2fudiscovery_2eproto_once,
      file_level_metadata_core_2fudiscovery_2fv3_2fudiscovery_2eproto[16]);
}

// ===================================================================

class LookupUriResponse::_Internal {
 public:
  static const ::uprotocol::v1::UUriBatch& uris(const LookupUriResponse* msg);
  static const ::uprotocol::v1::UStatus& status(const LookupUriResponse* msg);
};

const ::uprotocol::v1::UUriBatch&
LookupUriResponse::_Internal::uris(const LookupUriResponse* msg) {
  return *msg->_impl_.uris_;
}
const ::uprotocol::v1::UStatus&
LookupUriResponse::_Internal::status(const LookupUriResponse* msg) {
  return *msg->_impl_.status_;
}
void LookupUriResponse::clear_uris() {
  if (GetArenaForAllocation() == nullptr && _impl_.uris_ != nullptr) {
    delete _impl_.uris_;
  }
  _impl_.uris_ = nullptr;
}
void LookupUriResponse::clear_status() {
  if (GetArenaForAllocation() == nullptr && _impl_.status_ != nullptr) {
    delete _impl_.status_;
  }
  _impl_.status_ = nullptr;
}
LookupUriResponse::LookupUriResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:uprotocol.core.udiscovery.v3.LookupUriResponse)
}
LookupUriResponse::LookupUriResponse(const LookupUriResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  LookupUriResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.uris_){nullptr}
    , decltype(_impl_.status_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_uris()) {
    _this->_impl_.uris_ = new ::uprotocol::v1::UUriBatch(*from._impl_.uris_);
  }
  if (from._internal_has_status()) {
    _this->_impl_.status_ = new ::uprotocol::v1::UStatus(*from._impl_.status_);
  }
  // @@protoc_insertion_point(copy_constructor:uprotocol.core.udiscovery.v3.LookupUriResponse)
}

inline void LookupUriResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.uris_){nullptr}
    , decltype(_impl_.status_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

LookupUriResponse::~LookupUriResponse() {
  // @@protoc_insertion_point(destructor:uprotocol.core.udiscovery.v3.LookupUriResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void LookupUriResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.uris_;
  if (this != internal_default_instance()) delete _impl_.status_;
}

void LookupUriResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void LookupUriResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:uprotocol.core.udiscovery.v3.LookupUriResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.uris_ != nullptr) {
    delete _impl_.uris_;
  }
  _impl_.uris_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.status_ != nullptr) {
    delete _impl_.status_;
  }
  _impl_.status_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* LookupUriResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .uprotocol.v1.UUriBatch uris = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_uris(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .uprotocol.v1.UStatus status = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_status(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* LookupUriResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:uprotocol.core.udiscovery.v3.LookupUriResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .uprotocol.v1.UUriBatch uris = 1;
  if (this->_internal_has_uris()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::uris(this),
        _Internal::uris(this).GetCachedSize(), target, stream);
  }

  // .uprotocol.v1.UStatus status = 2;
  if (this->_internal_has_status()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::status(this),
        _Internal::status(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:uprotocol.core.udiscovery.v3.LookupUriResponse)
  return target;
}

size_t LookupUriResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:uprotocol.core.udiscovery.v3.LookupUriResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .uprotocol.v1.UUriBatch uris = 1;
  if (this->_internal_has_uris()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.uris_);
  }

  // .uprotocol.v1.UStatus status = 2;
  if (this->_internal_has_status()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.status_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData LookupUriResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    LookupUriResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*LookupUriResponse::GetClassData() const { return &_class_data_; }


void LookupUriResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<LookupUriResponse*>(&to_msg);
  auto& from = static_cast<const LookupUriResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:uprotocol.core.udiscovery.v3.LookupUriResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_uris()) {
    _this->_internal_mutable_uris()->::uprotocol::v1::UUriBatch::MergeFrom(
        from._internal_uris());
  }
  if (from._internal_has_status()) {
    _this->_internal_mutable_status()->::uprotocol::v1::UStatus::MergeFrom(
        from._internal_status());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void LookupUriResponse::CopyFrom(const LookupUriResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:uprotocol.core.udiscovery.v3.LookupUriResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LookupUriResponse::IsInitialized() const {
  return true;
}

void LookupUriResponse::InternalSwap(LookupUriResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(LookupUriResponse, _impl_.status_)
      + sizeof(LookupUriResponse::_impl_.status_)
      - PROTOBUF_FIELD_OFFSET(LookupUriResponse, _impl_.uris_)>(
          reinterpret_cast<char*>(&_impl_.uris_),
          reinterpret_cast<char*>(&other->_impl_.uris_));
}

::PROTOBUF_NAMESPACE_ID::Metadata LookupUriResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_core_2fudiscovery_2fv3_2fudiscovery_2eproto_getter, &descriptor_table_core_2fudiscovery_2fv3_2fudiscovery_2eproto_once,
      file_level_metadata_core_2fudiscovery_2fv3_2fudiscovery_2eproto[17]);
}

// ===================================================================

class NodeNotificationTopic::_Internal {
 public:
};

NodeNotificationTopic::NodeNotificationTopic(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:uprotocol.core.udiscovery.v3.NodeNotificationTopic)
}
NodeNotificationTopic::NodeNotificationTopic(const NodeNotificationTopic& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  NodeNotificationTopic* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.resource_name_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.resource_name_ = from._impl_.resource_name_;
  // @@protoc_insertion_point(copy_constructor:uprotocol.core.udiscovery.v3.NodeNotificationTopic)
}

inline void NodeNotificationTopic::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.resource_name_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

NodeNotificationTopic::~NodeNotificationTopic() {
  // @@protoc_insertion_point(destructor:uprotocol.core.udiscovery.v3.NodeNotificationTopic)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void NodeNotificationTopic::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void NodeNotificationTopic::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void NodeNotificationTopic::Clear() {
// @@protoc_insertion_point(message_clear_start:uprotocol.core.udiscovery.v3.NodeNotificationTopic)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.resource_name_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* NodeNotificationTopic::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .uprotocol.core.udiscovery.v3.Notification.Resources resource_name = 1 [(.uprotocol.resource_name_mask) = "*"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_resource_name(static_cast<::uprotocol::core::udiscovery::v3::Notification_Resources>(val));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* NodeNotificationTopic::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:uprotocol.core.udiscovery.v3.NodeNotificationTopic)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .uprotocol.core.udiscovery.v3.Notification.Resources resource_name = 1 [(.uprotocol.resource_name_mask) = "*"];
  if (this->_internal_resource_name() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_resource_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:uprotocol.core.udiscovery.v3.NodeNotificationTopic)
  return target;
}

size_t NodeNotificationTopic::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:uprotocol.core.udiscovery.v3.NodeNotificationTopic)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .uprotocol.core.udiscovery.v3.Notification.Resources resource_name = 1 [(.uprotocol.resource_name_mask) = "*"];
  if (this->_internal_resource_name() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_resource_name());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData NodeNotificationTopic::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    NodeNotificationTopic::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*NodeNotificationTopic::GetClassData() const { return &_class_data_; }


void NodeNotificationTopic::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<NodeNotificationTopic*>(&to_msg);
  auto& from = static_cast<const NodeNotificationTopic&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:uprotocol.core.udiscovery.v3.NodeNotificationTopic)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_resource_name() != 0) {
    _this->_internal_set_resource_name(from._internal_resource_name());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void NodeNotificationTopic::CopyFrom(const NodeNotificationTopic& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:uprotocol.core.udiscovery.v3.NodeNotificationTopic)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NodeNotificationTopic::IsInitialized() const {
  return true;
}

void NodeNotificationTopic::InternalSwap(NodeNotificationTopic* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.resource_name_, other->_impl_.resource_name_);
}

::PROTOBUF_NAMESPACE_ID::Metadata NodeNotificationTopic::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_core_2fudiscovery_2fv3_2fudiscovery_2eproto_getter, &descriptor_table_core_2fudiscovery_2fv3_2fudiscovery_2eproto_once,
      file_level_metadata_core_2fudiscovery_2fv3_2fudiscovery_2eproto[18]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace v3
}  // namespace udiscovery
}  // namespace core
}  // namespace uprotocol
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::uprotocol::core::udiscovery::v3::PropertyValue*
Arena::CreateMaybeMessage< ::uprotocol::core::udiscovery::v3::PropertyValue >(Arena* arena) {
  return Arena::CreateMessageInternal< ::uprotocol::core::udiscovery::v3::PropertyValue >(arena);
}
template<> PROTOBUF_NOINLINE ::uprotocol::core::udiscovery::v3::Node_PropertiesEntry_DoNotUse*
Arena::CreateMaybeMessage< ::uprotocol::core::udiscovery::v3::Node_PropertiesEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::uprotocol::core::udiscovery::v3::Node_PropertiesEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::uprotocol::core::udiscovery::v3::Node*
Arena::CreateMaybeMessage< ::uprotocol::core::udiscovery::v3::Node >(Arena* arena) {
  return Arena::CreateMessageInternal< ::uprotocol::core::udiscovery::v3::Node >(arena);
}
template<> PROTOBUF_NOINLINE ::uprotocol::core::udiscovery::v3::UpdateNodeRequest*
Arena::CreateMaybeMessage< ::uprotocol::core::udiscovery::v3::UpdateNodeRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::uprotocol::core::udiscovery::v3::UpdateNodeRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::uprotocol::core::udiscovery::v3::DeleteNodesRequest*
Arena::CreateMaybeMessage< ::uprotocol::core::udiscovery::v3::DeleteNodesRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::uprotocol::core::udiscovery::v3::DeleteNodesRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::uprotocol::core::udiscovery::v3::FindNodesRequest*
Arena::CreateMaybeMessage< ::uprotocol::core::udiscovery::v3::FindNodesRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::uprotocol::core::udiscovery::v3::FindNodesRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::uprotocol::core::udiscovery::v3::FindNodesResponse*
Arena::CreateMaybeMessage< ::uprotocol::core::udiscovery::v3::FindNodesResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::uprotocol::core::udiscovery::v3::FindNodesResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::uprotocol::core::udiscovery::v3::FindNodePropertiesRequest*
Arena::CreateMaybeMessage< ::uprotocol::core::udiscovery::v3::FindNodePropertiesRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::uprotocol::core::udiscovery::v3::FindNodePropertiesRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::uprotocol::core::udiscovery::v3::FindNodePropertiesResponse_PropertiesEntry_DoNotUse*
Arena::CreateMaybeMessage< ::uprotocol::core::udiscovery::v3::FindNodePropertiesResponse_PropertiesEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::uprotocol::core::udiscovery::v3::FindNodePropertiesResponse_PropertiesEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::uprotocol::core::udiscovery::v3::FindNodePropertiesResponse*
Arena::CreateMaybeMessage< ::uprotocol::core::udiscovery::v3::FindNodePropertiesResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::uprotocol::core::udiscovery::v3::FindNodePropertiesResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::uprotocol::core::udiscovery::v3::AddNodesRequest*
Arena::CreateMaybeMessage< ::uprotocol::core::udiscovery::v3::AddNodesRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::uprotocol::core::udiscovery::v3::AddNodesRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::uprotocol::core::udiscovery::v3::UpdatePropertyRequest*
Arena::CreateMaybeMessage< ::uprotocol::core::udiscovery::v3::UpdatePropertyRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::uprotocol::core::udiscovery::v3::UpdatePropertyRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::uprotocol::core::udiscovery::v3::Notification*
Arena::CreateMaybeMessage< ::uprotocol::core::udiscovery::v3::Notification >(Arena* arena) {
  return Arena::CreateMessageInternal< ::uprotocol::core::udiscovery::v3::Notification >(arena);
}
template<> PROTOBUF_NOINLINE ::uprotocol::core::udiscovery::v3::ObserverInfo*
Arena::CreateMaybeMessage< ::uprotocol::core::udiscovery::v3::ObserverInfo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::uprotocol::core::udiscovery::v3::ObserverInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::uprotocol::core::udiscovery::v3::NotificationsRequest*
Arena::CreateMaybeMessage< ::uprotocol::core::udiscovery::v3::NotificationsRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::uprotocol::core::udiscovery::v3::NotificationsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::uprotocol::core::udiscovery::v3::ResolveUriRequest*
Arena::CreateMaybeMessage< ::uprotocol::core::udiscovery::v3::ResolveUriRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::uprotocol::core::udiscovery::v3::ResolveUriRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::uprotocol::core::udiscovery::v3::ResolveUriResponse*
Arena::CreateMaybeMessage< ::uprotocol::core::udiscovery::v3::ResolveUriResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::uprotocol::core::udiscovery::v3::ResolveUriResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::uprotocol::core::udiscovery::v3::LookupUriResponse*
Arena::CreateMaybeMessage< ::uprotocol::core::udiscovery::v3::LookupUriResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::uprotocol::core::udiscovery::v3::LookupUriResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::uprotocol::core::udiscovery::v3::NodeNotificationTopic*
Arena::CreateMaybeMessage< ::uprotocol::core::udiscovery::v3::NodeNotificationTopic >(Arena* arena) {
  return Arena::CreateMessageInternal< ::uprotocol::core::udiscovery::v3::NodeNotificationTopic >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
