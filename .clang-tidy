# Part of the uprocotol project, under the Apache License v2.0 
# See /LICENSE for license information.
# SPDX-License-Identifier: Apache-2.0 

---
# - modernize-use-nodiscard is disabled because it only fixes const methods,
#   not non-const, which yields distracting results on accessors.
# - performance-unnecessary-value-param is disabled because it duplicate
#   modernize-pass-by-value.
Checks: >
    -*,
    bugprone-*,
    #-bugprone-easily-swappable-parameters,
    #-bugprone-narrowing-conversions,
    cert-*,
    -cert-msc50-cpp,
    -cert-msc51-cpp,
    cppcoreguidelines-*,
    -cppcoreguidelines-avoid-non-const-global-variables,
    -cppcoreguidelines-special-member-functions,
    -cppcoreguidelines-pro-type-reinterpret-cast,
    google-*,
    #-google-readability-todo,
    #-google-runtime-int,
    llvm-header-guard,
    hicpp-exception-baseclass,
    hicpp-no-assembler,
    misc-confusable-identifiers,
    misc-const-correctness,
    misc-definitions-in-headers,
    misc-header-include-cycle,
    misc-include-cleaner,
    misc-misplaced-const,
    misc-non-private-member-variables-in-classes,
    misc-redundant-expression,
    misc-static-assert,
    misc-unconventional-assign-operator,
    misc-uniqueptr-reset-release,
    misc-unused-*,
    misc-use-anonymous-namespace,
    modernize-*,
    -modernize-use-trailing-return-type,
    performance-*,
    -performance-avoid-endl,
    portability-*,
    -portability-restrict-system-includes,
    readability-*,
    #-readability-convert-member-functions-to-static,
    -readability-identifier-length,
    -readability-suspicious-call-argument,
WarningsAsErrors: true
CheckOptions:
    - { key: readability-identifier-naming.ClassCase, value: CamelCase }
    #- {
    #    key: readability-identifier-naming.ConstexprVariableCase,
    #    value: CamelCase,
    #}
    #- { key: readability-identifier-naming.NamespaceCase, value: CamelCase }
    - { key: readability-identifier-naming.StructCase, value: CamelCase }
    - {
        key: readability-identifier-naming.TemplateParameterCase,
        value: CamelCase,
    }
    - { key: readability-identifier-naming.TypeAliasCase, value: CamelCase }
    - { key: readability-identifier-naming.TypedefCase, value: CamelCase }
    - { key: readability-identifier-naming.UnionCase, value: CamelCase }
    - { key: readability-identifier-naming.VariableCase, value: lower_case }
    - { key: readability-identifier-naming.ParameterCase, value: lower_case }
    - { key: readability-identifier-naming.ClassMemberCase, value: lower_case }
    - {
        key: readability-identifier-naming.MethodIgnoredRegexp,
        value: '^classof$',
    }
