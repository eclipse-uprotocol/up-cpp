name: C++ Build

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        compiler: [clang-15, gcc-11]

    env:
      CC: ${{ matrix.compiler }}
      CXX: ${{ matrix.compiler }}

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2

    - name: Setup Compiler and Tools
      run: |
        if [ "${{ matrix.compiler }}" == "clang-15" ]; then
          sudo apt-get install -y clang-15
        elif [ "${{ matrix.compiler }}" == "gcc-11" ]; then
          sudo apt-get install -y g++-11 gcc-11
        fi
        sudo apt-get install -y build-essential libbsd-dev make ninja-build pkg-config clang-format cmake gcc uuid uuid-dev openssl libssl-dev
        sudo apt-get install -y libgtest-dev rapidjson-dev cgreen1
        make && sudo make install
 
    
    - name: Clang Format
      run: |
        clang-format --version
        git diff --exit-code || { echo "Code style issues found. Please run clang-format and fix them."; exit 1; }

    - name: Build C++ Application
      run: |
        mkdir build
        cd build
        cmake ..
        make
  
    - name: Run Test Capture
      run: |
        cd build
        ctest --verbose
        lcov --directory . --capture --output-file coverage.info
        lcov --remove coverage.info '/usr/*' --output-file coverage.info
        lcov --list coverage.info
  
    - name: Check Code Coverage Threshold
      run: |
        COVERAGE_THRESHOLD=80
        COVERAGE_PERCENT=$(lcov --summary coverage.info | grep "lines......:" | awk '{print $3}')
        echo "Code coverage: $COVERAGE_PERCENT%"
        if [ $COVERAGE_PERCENT -lt $COVERAGE_THRESHOLD ]; then
          echo "Code coverage is below the threshold of $COVERAGE_THRESHOLD%"
          exit 1
        fi

