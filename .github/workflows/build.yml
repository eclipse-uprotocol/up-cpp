name: C++ Build

on:
  push:
    branches:
      - '*'
  pull_request:
    branches:
      - main

jobs:  
  build:
    runs-on: ubuntu-22.04
    
    #container:
    #  image: ghcr.io/username/repository/image:tag
    #  options: --user <user_id>:<group_id>
    #  credentials:
    #    username: ${{ github.actor }}
    #    password: ${{ secrets.GITHUB_TOKEN }}

    strategy:
      matrix:
        ccompiler: [gcc-11]
        cppcompiler: [g++-11]

    env:
      CC: ${{ matrix.ccompiler }}
      CXX: ${{ matrix.cppcompiler }}

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2

    - name: Setup Compiler and Tools
      run: |
        sudo apt-update -y sudo apt-get -y upgrade && apt-get -y install g++ git libstdc++-11-dev
        sudo apt-get install -y g++-11 gcc-11
        sudo apt-get -y update && sudo apt-get install -y build-essential libbsd-dev make ninja-build pkg-config clang-format cmake gcc uuid uuid-dev openssl libssl-dev
        sudo apt-get install -y libgtest-dev rapidjson-dev cgreen1  libspdlog-dev libcgreen1-dev wget lcov
    - name: Update Cmake to latest version.
      run: |
        sudo apt-get install ca-certificates gpg wget
        wget -O - https://apt.kitware.com/keys/kitware-archive-latest.asc 2>/dev/null | gpg --dearmor - | sudo tee /usr/share/keyrings/kitware-archive-keyring.gpg >/dev/null
        echo 'deb [signed-by=/usr/share/keyrings/kitware-archive-keyring.gpg] https://apt.kitware.com/ubuntu/ jammy main' | sudo tee /etc/apt/sources.list.d/kitware.list >/dev/null
        sudo apt-get -y update && sudo apt-get -y install kitware-archive-keyring cmake
 
    - name: Build Protocol Buffer.
      run: |
        git clone --progress -b v3.21.12  https://github.com/protocolbuffers/protobuf
        cd protobuf
        git submodule update --init --recursive
        cmake . -DCMAKE_C_COMPILER=/usr/bin/gcc -DCMAKE_CXX_COMPILER=/usr/bin/g++ -DCMAKE_CXX_STANDARD=14  -DCMAKE_BUILD_TYPE=Debug -Dprotobuf_BUILD_SHARED_LIBS=ON -Dprotobuf_BUILD_TESTS=OFF;
        cmake --build . && sudo -E make -j4 install
    - name: Build C++ UProtocol
      run: |
        /usr/bin/cmake --no-warn-unused-cli -DCMAKE_EXPORT_COMPILE_COMMANDS:BOOL=TRUE -DCMAKE_BUILD_TYPE:STRING=Debug \
         -DCMAKE_C_COMPILER:FILEPATH=/usr/bin/gcc -DCMAKE_CXX_COMPILER:FILEPATH=/usr/bin/g++ -S . -B build -G Ninja
        cd build && ninja && ninja -v test
    - name: Generate coverage report
      run: |
        lcov --capture --directory . --output-file coverage.info
        lcov --remove coverage.info '/usr/*' --output-file coverage.info
        lcov --list coverage.info
  
    - name: Check code coverage
      run: |
        cd build
        COVERAGE_PERCENTAGE=$(lcov --list coverage.info | grep "total" | awk '{ print $4 }' | cut -d "%" -f 1)
        echo "Code coverage: $COVERAGE_PERCENTAGE%"
        if (( $COVERAGE_PERCENTAGE < 80 )); then
          echo "Code coverage is less than 80%. Failing the build."
          exit 1
        fi
   